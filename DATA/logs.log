2022-12-30 04:40:49,603:INFO:PyCaret Supervised Module
2022-12-30 04:40:49,603:INFO:ML Usecase: regression
2022-12-30 04:40:49,603:INFO:version 2.3.5
2022-12-30 04:40:49,604:INFO:Initializing setup()
2022-12-30 04:40:49,604:INFO:setup(target=Price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=['Carat Weight'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-30 04:40:49,604:INFO:Checking environment
2022-12-30 04:40:49,605:INFO:python_version: 3.7.15
2022-12-30 04:40:49,605:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-30 04:40:49,605:INFO:machine: AMD64
2022-12-30 04:40:49,605:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-30 04:40:49,609:INFO:Memory: svmem(total=17053212672, available=8735813632, percent=48.8, used=8317399040, free=8735813632)
2022-12-30 04:40:49,610:INFO:Physical Core: 2
2022-12-30 04:40:49,610:INFO:Logical Core: 4
2022-12-30 04:40:49,610:INFO:Checking libraries
2022-12-30 04:40:49,610:INFO:pd==1.3.5
2022-12-30 04:40:49,610:INFO:numpy==1.19.5
2022-12-30 04:40:49,610:INFO:sklearn==0.23.2
2022-12-30 04:40:49,611:INFO:lightgbm==3.3.3
2022-12-30 04:40:49,613:WARNING:catboost not found
2022-12-30 04:40:49,614:WARNING:xgboost not found
2022-12-30 04:40:50,615:INFO:mlflow==1.30.0
2022-12-30 04:40:50,616:INFO:Checking Exceptions
2022-12-30 04:41:04,379:INFO:PyCaret Supervised Module
2022-12-30 04:41:04,379:INFO:ML Usecase: regression
2022-12-30 04:41:04,380:INFO:version 2.3.5
2022-12-30 04:41:04,380:INFO:Initializing setup()
2022-12-30 04:41:04,380:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=['Carat Weight'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-30 04:41:04,380:INFO:Checking environment
2022-12-30 04:41:04,381:INFO:python_version: 3.7.15
2022-12-30 04:41:04,381:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-30 04:41:04,381:INFO:machine: AMD64
2022-12-30 04:41:04,381:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-30 04:41:04,387:INFO:Memory: svmem(total=17053212672, available=8694181888, percent=49.0, used=8359030784, free=8694181888)
2022-12-30 04:41:04,387:INFO:Physical Core: 2
2022-12-30 04:41:04,387:INFO:Logical Core: 4
2022-12-30 04:41:04,387:INFO:Checking libraries
2022-12-30 04:41:04,387:INFO:pd==1.3.5
2022-12-30 04:41:04,387:INFO:numpy==1.19.5
2022-12-30 04:41:04,387:INFO:sklearn==0.23.2
2022-12-30 04:41:04,388:INFO:lightgbm==3.3.3
2022-12-30 04:41:04,389:WARNING:catboost not found
2022-12-30 04:41:04,390:WARNING:xgboost not found
2022-12-30 04:41:04,390:INFO:mlflow==1.30.0
2022-12-30 04:41:04,390:INFO:Checking Exceptions
2022-12-30 04:41:46,749:INFO:PyCaret Supervised Module
2022-12-30 04:41:46,749:INFO:ML Usecase: regression
2022-12-30 04:41:46,750:INFO:version 2.3.5
2022-12-30 04:41:46,750:INFO:Initializing setup()
2022-12-30 04:41:46,750:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-30 04:41:46,750:INFO:Checking environment
2022-12-30 04:41:46,750:INFO:python_version: 3.7.15
2022-12-30 04:41:46,750:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-30 04:41:46,750:INFO:machine: AMD64
2022-12-30 04:41:46,750:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-30 04:41:46,754:INFO:Memory: svmem(total=17053212672, available=8636620800, percent=49.4, used=8416591872, free=8636620800)
2022-12-30 04:41:46,754:INFO:Physical Core: 2
2022-12-30 04:41:46,754:INFO:Logical Core: 4
2022-12-30 04:41:46,754:INFO:Checking libraries
2022-12-30 04:41:46,754:INFO:pd==1.3.5
2022-12-30 04:41:46,754:INFO:numpy==1.19.5
2022-12-30 04:41:46,755:INFO:sklearn==0.23.2
2022-12-30 04:41:46,755:INFO:lightgbm==3.3.3
2022-12-30 04:41:46,756:WARNING:catboost not found
2022-12-30 04:41:46,757:WARNING:xgboost not found
2022-12-30 04:41:46,758:INFO:mlflow==1.30.0
2022-12-30 04:41:46,758:INFO:Checking Exceptions
2022-12-30 04:41:46,758:INFO:Declaring global variables
2022-12-30 04:41:46,758:INFO:USI: 2af2
2022-12-30 04:41:46,758:INFO:pycaret_globals: {'USI', 'fold_groups_param', 'y_train', 'stratify_param', 'imputation_regressor', 'fold_shuffle_param', 'html_param', 'transform_target_param', 'fix_imbalance_method_param', 'experiment__', 'fold_generator', 'log_plots_param', '_available_plots', 'logging_param', 'pycaret_globals', 'data_before_preprocess', 'fix_imbalance_param', 'exp_name_log', 'y_test', 'iterative_imputation_iters_param', 'master_model_container', '_all_metrics', 'fold_groups_param_full', 'gpu_param', '_ml_usecase', 'target_param', '_all_models', 'display_container', 'n_jobs_param', 'X_train', 'X_test', 'X', 'seed', 'imputation_classifier', 'transform_target_method_param', 'y', 'create_model_container', 'prep_pipe', 'fold_param', '_all_models_internal', '_internal_pipeline', '_gpu_n_jobs_param'}
2022-12-30 04:41:46,758:INFO:Preparing display monitor
2022-12-30 04:41:46,759:INFO:Preparing display monitor
2022-12-30 04:41:46,775:INFO:Importing libraries
2022-12-30 04:41:46,775:INFO:Copying data for preprocessing
2022-12-30 04:41:46,788:INFO:Declaring preprocessing parameters
2022-12-30 04:41:46,792:INFO:Creating preprocessing pipeline
2022-12-30 04:41:46,845:INFO:Preprocessing pipeline created successfully
2022-12-30 04:41:46,845:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-12-30 04:41:46,845:INFO:Creating global containers
2022-12-30 04:41:46,845:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-12-30 04:41:48,428:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 04:41:48,429:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 04:41:48,569:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 04:41:48,570:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 04:41:48,571:INFO:Creating grid variables
2022-12-30 04:41:48,588:INFO:Logging experiment in MLFlow
2022-12-30 04:41:49,035:INFO:SubProcess save_model() called ==================================
2022-12-30 04:41:49,050:INFO:Initializing save_model()
2022-12-30 04:41:49,050:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-12-30 04:41:49,050:INFO:Adding model into prep_pipe
2022-12-30 04:41:49,050:WARNING:Only Model saved as it was a pipeline.
2022-12-30 04:41:49,050:INFO:Transformation Pipeline.pkl saved in current working directory
2022-12-30 04:41:49,066:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 04:41:49,066:INFO:save_model() successfully completed......................................
2022-12-30 04:41:49,160:INFO:SubProcess save_model() end ==================================
2022-12-30 04:41:49,238:INFO:create_model_container: 0
2022-12-30 04:41:49,238:INFO:master_model_container: 0
2022-12-30 04:41:49,238:INFO:display_container: 1
2022-12-30 04:41:49,238:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 04:41:49,238:INFO:setup() succesfully completed......................................
2022-12-30 04:43:00,943:INFO:Initializing compare_models()
2022-12-30 04:43:00,944:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, exclude=['ransac'])
2022-12-30 04:43:00,944:INFO:Checking exceptions
2022-12-30 04:43:00,944:INFO:Preparing display monitor
2022-12-30 04:43:00,944:INFO:Preparing display monitor
2022-12-30 04:43:00,989:INFO:Initializing Linear Regression
2022-12-30 04:43:00,989:INFO:Total runtime is 0.0 minutes
2022-12-30 04:43:01,007:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:01,007:INFO:Initializing create_model()
2022-12-30 04:43:01,008:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:01,009:INFO:Checking exceptions
2022-12-30 04:43:01,009:INFO:Importing libraries
2022-12-30 04:43:01,009:INFO:Copying training dataset
2022-12-30 04:43:01,011:INFO:Defining folds
2022-12-30 04:43:01,012:INFO:Declaring metric variables
2022-12-30 04:43:01,026:INFO:Importing untrained model
2022-12-30 04:43:01,044:INFO:Linear Regression Imported succesfully
2022-12-30 04:43:01,077:INFO:Starting cross validation
2022-12-30 04:43:01,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:10,911:INFO:Calculating mean and std
2022-12-30 04:43:10,911:INFO:Creating metrics dataframe
2022-12-30 04:43:10,918:INFO:Uploading results into container
2022-12-30 04:43:10,919:INFO:Uploading model into container now
2022-12-30 04:43:10,919:INFO:create_model_container: 1
2022-12-30 04:43:10,919:INFO:master_model_container: 1
2022-12-30 04:43:10,919:INFO:display_container: 2
2022-12-30 04:43:10,920:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2022-12-30 04:43:10,921:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:11,034:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:11,034:INFO:Creating metrics dataframe
2022-12-30 04:43:11,050:INFO:Initializing Lasso Regression
2022-12-30 04:43:11,050:INFO:Total runtime is 0.16768364508946737 minutes
2022-12-30 04:43:11,070:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:11,071:INFO:Initializing create_model()
2022-12-30 04:43:11,071:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:11,072:INFO:Checking exceptions
2022-12-30 04:43:11,072:INFO:Importing libraries
2022-12-30 04:43:11,072:INFO:Copying training dataset
2022-12-30 04:43:11,074:INFO:Defining folds
2022-12-30 04:43:11,075:INFO:Declaring metric variables
2022-12-30 04:43:11,097:INFO:Importing untrained model
2022-12-30 04:43:11,116:INFO:Lasso Regression Imported succesfully
2022-12-30 04:43:11,153:INFO:Starting cross validation
2022-12-30 04:43:11,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:11,486:INFO:Calculating mean and std
2022-12-30 04:43:11,486:INFO:Creating metrics dataframe
2022-12-30 04:43:11,486:INFO:Uploading results into container
2022-12-30 04:43:11,486:INFO:Uploading model into container now
2022-12-30 04:43:11,486:INFO:create_model_container: 2
2022-12-30 04:43:11,486:INFO:master_model_container: 2
2022-12-30 04:43:11,486:INFO:display_container: 2
2022-12-30 04:43:11,497:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-12-30 04:43:11,498:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:11,607:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:11,607:INFO:Creating metrics dataframe
2022-12-30 04:43:11,639:INFO:Initializing Ridge Regression
2022-12-30 04:43:11,639:INFO:Total runtime is 0.17749950885772706 minutes
2022-12-30 04:43:11,657:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:11,658:INFO:Initializing create_model()
2022-12-30 04:43:11,658:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:11,658:INFO:Checking exceptions
2022-12-30 04:43:11,658:INFO:Importing libraries
2022-12-30 04:43:11,659:INFO:Copying training dataset
2022-12-30 04:43:11,662:INFO:Defining folds
2022-12-30 04:43:11,662:INFO:Declaring metric variables
2022-12-30 04:43:11,679:INFO:Importing untrained model
2022-12-30 04:43:11,702:INFO:Ridge Regression Imported succesfully
2022-12-30 04:43:11,745:INFO:Starting cross validation
2022-12-30 04:43:11,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:12,090:INFO:Calculating mean and std
2022-12-30 04:43:12,090:INFO:Creating metrics dataframe
2022-12-30 04:43:12,098:INFO:Uploading results into container
2022-12-30 04:43:12,100:INFO:Uploading model into container now
2022-12-30 04:43:12,100:INFO:create_model_container: 3
2022-12-30 04:43:12,101:INFO:master_model_container: 3
2022-12-30 04:43:12,101:INFO:display_container: 2
2022-12-30 04:43:12,102:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2022-12-30 04:43:12,102:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:12,219:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:12,219:INFO:Creating metrics dataframe
2022-12-30 04:43:12,235:INFO:Initializing Elastic Net
2022-12-30 04:43:12,235:INFO:Total runtime is 0.18744096358617146 minutes
2022-12-30 04:43:12,264:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:12,264:INFO:Initializing create_model()
2022-12-30 04:43:12,265:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:12,265:INFO:Checking exceptions
2022-12-30 04:43:12,265:INFO:Importing libraries
2022-12-30 04:43:12,266:INFO:Copying training dataset
2022-12-30 04:43:12,271:INFO:Defining folds
2022-12-30 04:43:12,271:INFO:Declaring metric variables
2022-12-30 04:43:12,292:INFO:Importing untrained model
2022-12-30 04:43:12,311:INFO:Elastic Net Imported succesfully
2022-12-30 04:43:12,343:INFO:Starting cross validation
2022-12-30 04:43:12,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:12,679:INFO:Calculating mean and std
2022-12-30 04:43:12,679:INFO:Creating metrics dataframe
2022-12-30 04:43:12,679:INFO:Uploading results into container
2022-12-30 04:43:12,679:INFO:Uploading model into container now
2022-12-30 04:43:12,679:INFO:create_model_container: 4
2022-12-30 04:43:12,679:INFO:master_model_container: 4
2022-12-30 04:43:12,679:INFO:display_container: 2
2022-12-30 04:43:12,679:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-12-30 04:43:12,679:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:12,800:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:12,800:INFO:Creating metrics dataframe
2022-12-30 04:43:12,816:INFO:Initializing Least Angle Regression
2022-12-30 04:43:12,816:INFO:Total runtime is 0.19711860418319702 minutes
2022-12-30 04:43:12,846:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:12,846:INFO:Initializing create_model()
2022-12-30 04:43:12,847:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:12,847:INFO:Checking exceptions
2022-12-30 04:43:12,847:INFO:Importing libraries
2022-12-30 04:43:12,847:INFO:Copying training dataset
2022-12-30 04:43:12,850:INFO:Defining folds
2022-12-30 04:43:12,850:INFO:Declaring metric variables
2022-12-30 04:43:12,870:INFO:Importing untrained model
2022-12-30 04:43:12,890:INFO:Least Angle Regression Imported succesfully
2022-12-30 04:43:12,923:INFO:Starting cross validation
2022-12-30 04:43:12,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:13,261:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-12-30 04:43:13,277:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 428, in _process_worker
    r = call_item()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 275, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 620, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 2202, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 3177, in create_model_supervised
    error_score=0,
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 435, in result
    return self.__get_result()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-12-30 04:43:13,277:INFO:Initializing create_model()
2022-12-30 04:43:13,277:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:13,277:INFO:Checking exceptions
2022-12-30 04:43:13,277:INFO:Importing libraries
2022-12-30 04:43:13,277:INFO:Copying training dataset
2022-12-30 04:43:13,277:INFO:Defining folds
2022-12-30 04:43:13,277:INFO:Declaring metric variables
2022-12-30 04:43:13,296:INFO:Importing untrained model
2022-12-30 04:43:13,317:INFO:Least Angle Regression Imported succesfully
2022-12-30 04:43:13,359:INFO:Starting cross validation
2022-12-30 04:43:13,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:19,368:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-12-30 04:43:19,368:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 428, in _process_worker
    r = call_item()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 275, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 620, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 2211, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 3177, in create_model_supervised
    error_score=0,
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 428, in result
    return self.__get_result()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-12-30 04:43:19,368:INFO:Initializing Lasso Least Angle Regression
2022-12-30 04:43:19,368:INFO:Total runtime is 0.306316347916921 minutes
2022-12-30 04:43:19,398:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:19,399:INFO:Initializing create_model()
2022-12-30 04:43:19,399:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:19,399:INFO:Checking exceptions
2022-12-30 04:43:19,399:INFO:Importing libraries
2022-12-30 04:43:19,399:INFO:Copying training dataset
2022-12-30 04:43:19,402:INFO:Defining folds
2022-12-30 04:43:19,402:INFO:Declaring metric variables
2022-12-30 04:43:19,417:INFO:Importing untrained model
2022-12-30 04:43:19,434:INFO:Lasso Least Angle Regression Imported succesfully
2022-12-30 04:43:19,467:INFO:Starting cross validation
2022-12-30 04:43:19,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:26,010:INFO:Calculating mean and std
2022-12-30 04:43:26,010:INFO:Creating metrics dataframe
2022-12-30 04:43:26,010:INFO:Uploading results into container
2022-12-30 04:43:26,010:INFO:Uploading model into container now
2022-12-30 04:43:26,010:INFO:create_model_container: 5
2022-12-30 04:43:26,026:INFO:master_model_container: 5
2022-12-30 04:43:26,026:INFO:display_container: 2
2022-12-30 04:43:26,026:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2022-12-30 04:43:26,033:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:26,160:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:26,160:INFO:Creating metrics dataframe
2022-12-30 04:43:26,191:INFO:Initializing Orthogonal Matching Pursuit
2022-12-30 04:43:26,191:INFO:Total runtime is 0.4200371901194254 minutes
2022-12-30 04:43:26,205:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:26,205:INFO:Initializing create_model()
2022-12-30 04:43:26,205:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:26,206:INFO:Checking exceptions
2022-12-30 04:43:26,206:INFO:Importing libraries
2022-12-30 04:43:26,206:INFO:Copying training dataset
2022-12-30 04:43:26,208:INFO:Defining folds
2022-12-30 04:43:26,209:INFO:Declaring metric variables
2022-12-30 04:43:26,228:INFO:Importing untrained model
2022-12-30 04:43:26,244:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-12-30 04:43:26,278:INFO:Starting cross validation
2022-12-30 04:43:26,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:26,580:INFO:Calculating mean and std
2022-12-30 04:43:26,580:INFO:Creating metrics dataframe
2022-12-30 04:43:26,604:INFO:Uploading results into container
2022-12-30 04:43:26,605:INFO:Uploading model into container now
2022-12-30 04:43:26,605:INFO:create_model_container: 6
2022-12-30 04:43:26,606:INFO:master_model_container: 6
2022-12-30 04:43:26,606:INFO:display_container: 2
2022-12-30 04:43:26,611:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2022-12-30 04:43:26,611:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:26,726:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:26,726:INFO:Creating metrics dataframe
2022-12-30 04:43:26,742:INFO:Initializing Bayesian Ridge
2022-12-30 04:43:26,742:INFO:Total runtime is 0.42921988566716507 minutes
2022-12-30 04:43:26,771:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:26,772:INFO:Initializing create_model()
2022-12-30 04:43:26,772:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:26,773:INFO:Checking exceptions
2022-12-30 04:43:26,773:INFO:Importing libraries
2022-12-30 04:43:26,773:INFO:Copying training dataset
2022-12-30 04:43:26,778:INFO:Defining folds
2022-12-30 04:43:26,778:INFO:Declaring metric variables
2022-12-30 04:43:26,795:INFO:Importing untrained model
2022-12-30 04:43:26,814:INFO:Bayesian Ridge Imported succesfully
2022-12-30 04:43:26,847:INFO:Starting cross validation
2022-12-30 04:43:26,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:27,493:INFO:Calculating mean and std
2022-12-30 04:43:27,493:INFO:Creating metrics dataframe
2022-12-30 04:43:27,509:INFO:Uploading results into container
2022-12-30 04:43:27,509:INFO:Uploading model into container now
2022-12-30 04:43:27,509:INFO:create_model_container: 7
2022-12-30 04:43:27,509:INFO:master_model_container: 7
2022-12-30 04:43:27,509:INFO:display_container: 2
2022-12-30 04:43:27,509:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2022-12-30 04:43:27,509:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:27,649:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:27,649:INFO:Creating metrics dataframe
2022-12-30 04:43:27,683:INFO:Initializing Passive Aggressive Regressor
2022-12-30 04:43:27,683:INFO:Total runtime is 0.4449068744977315 minutes
2022-12-30 04:43:27,698:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:27,699:INFO:Initializing create_model()
2022-12-30 04:43:27,699:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:27,699:INFO:Checking exceptions
2022-12-30 04:43:27,699:INFO:Importing libraries
2022-12-30 04:43:27,699:INFO:Copying training dataset
2022-12-30 04:43:27,701:INFO:Defining folds
2022-12-30 04:43:27,701:INFO:Declaring metric variables
2022-12-30 04:43:27,721:INFO:Importing untrained model
2022-12-30 04:43:27,738:INFO:Passive Aggressive Regressor Imported succesfully
2022-12-30 04:43:27,775:INFO:Starting cross validation
2022-12-30 04:43:27,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:28,213:INFO:Calculating mean and std
2022-12-30 04:43:28,213:INFO:Creating metrics dataframe
2022-12-30 04:43:28,229:INFO:Uploading results into container
2022-12-30 04:43:28,229:INFO:Uploading model into container now
2022-12-30 04:43:28,229:INFO:create_model_container: 8
2022-12-30 04:43:28,229:INFO:master_model_container: 8
2022-12-30 04:43:28,229:INFO:display_container: 2
2022-12-30 04:43:28,229:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-12-30 04:43:28,229:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:28,354:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:28,354:INFO:Creating metrics dataframe
2022-12-30 04:43:28,370:INFO:Initializing Huber Regressor
2022-12-30 04:43:28,370:INFO:Total runtime is 0.45635038614273066 minutes
2022-12-30 04:43:28,398:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:28,398:INFO:Initializing create_model()
2022-12-30 04:43:28,399:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:28,399:INFO:Checking exceptions
2022-12-30 04:43:28,399:INFO:Importing libraries
2022-12-30 04:43:28,399:INFO:Copying training dataset
2022-12-30 04:43:28,401:INFO:Defining folds
2022-12-30 04:43:28,401:INFO:Declaring metric variables
2022-12-30 04:43:28,424:INFO:Importing untrained model
2022-12-30 04:43:28,441:INFO:Huber Regressor Imported succesfully
2022-12-30 04:43:28,473:INFO:Starting cross validation
2022-12-30 04:43:28,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:34,199:INFO:Calculating mean and std
2022-12-30 04:43:34,199:INFO:Creating metrics dataframe
2022-12-30 04:43:34,199:INFO:Uploading results into container
2022-12-30 04:43:34,199:INFO:Uploading model into container now
2022-12-30 04:43:34,199:INFO:create_model_container: 9
2022-12-30 04:43:34,199:INFO:master_model_container: 9
2022-12-30 04:43:34,199:INFO:display_container: 2
2022-12-30 04:43:34,215:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2022-12-30 04:43:34,215:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:34,324:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:34,324:INFO:Creating metrics dataframe
2022-12-30 04:43:34,356:INFO:Initializing K Neighbors Regressor
2022-12-30 04:43:34,356:INFO:Total runtime is 0.5561320662498473 minutes
2022-12-30 04:43:34,373:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:34,373:INFO:Initializing create_model()
2022-12-30 04:43:34,374:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:34,374:INFO:Checking exceptions
2022-12-30 04:43:34,374:INFO:Importing libraries
2022-12-30 04:43:34,374:INFO:Copying training dataset
2022-12-30 04:43:34,377:INFO:Defining folds
2022-12-30 04:43:34,377:INFO:Declaring metric variables
2022-12-30 04:43:34,393:INFO:Importing untrained model
2022-12-30 04:43:34,409:INFO:K Neighbors Regressor Imported succesfully
2022-12-30 04:43:34,447:INFO:Starting cross validation
2022-12-30 04:43:34,448:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:41,590:INFO:Calculating mean and std
2022-12-30 04:43:41,590:INFO:Creating metrics dataframe
2022-12-30 04:43:41,598:INFO:Uploading results into container
2022-12-30 04:43:41,598:INFO:Uploading model into container now
2022-12-30 04:43:41,598:INFO:create_model_container: 10
2022-12-30 04:43:41,599:INFO:master_model_container: 10
2022-12-30 04:43:41,599:INFO:display_container: 2
2022-12-30 04:43:41,602:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2022-12-30 04:43:41,602:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:41,744:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:41,744:INFO:Creating metrics dataframe
2022-12-30 04:43:41,760:INFO:Initializing Decision Tree Regressor
2022-12-30 04:43:41,760:INFO:Total runtime is 0.6795175115267436 minutes
2022-12-30 04:43:41,783:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:41,783:INFO:Initializing create_model()
2022-12-30 04:43:41,784:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:41,784:INFO:Checking exceptions
2022-12-30 04:43:41,784:INFO:Importing libraries
2022-12-30 04:43:41,784:INFO:Copying training dataset
2022-12-30 04:43:41,787:INFO:Defining folds
2022-12-30 04:43:41,787:INFO:Declaring metric variables
2022-12-30 04:43:41,806:INFO:Importing untrained model
2022-12-30 04:43:41,825:INFO:Decision Tree Regressor Imported succesfully
2022-12-30 04:43:41,863:INFO:Starting cross validation
2022-12-30 04:43:41,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:43:43,192:INFO:Calculating mean and std
2022-12-30 04:43:43,192:INFO:Creating metrics dataframe
2022-12-30 04:43:43,201:INFO:Uploading results into container
2022-12-30 04:43:43,201:INFO:Uploading model into container now
2022-12-30 04:43:43,201:INFO:create_model_container: 11
2022-12-30 04:43:43,202:INFO:master_model_container: 11
2022-12-30 04:43:43,202:INFO:display_container: 2
2022-12-30 04:43:43,202:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2022-12-30 04:43:43,202:INFO:create_model() succesfully completed......................................
2022-12-30 04:43:43,346:INFO:SubProcess create_model() end ==================================
2022-12-30 04:43:43,346:INFO:Creating metrics dataframe
2022-12-30 04:43:43,377:INFO:Initializing Random Forest Regressor
2022-12-30 04:43:43,377:INFO:Total runtime is 0.7064767241477966 minutes
2022-12-30 04:43:43,393:INFO:SubProcess create_model() called ==================================
2022-12-30 04:43:43,393:INFO:Initializing create_model()
2022-12-30 04:43:43,393:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:43:43,394:INFO:Checking exceptions
2022-12-30 04:43:43,394:INFO:Importing libraries
2022-12-30 04:43:43,394:INFO:Copying training dataset
2022-12-30 04:43:43,396:INFO:Defining folds
2022-12-30 04:43:43,397:INFO:Declaring metric variables
2022-12-30 04:43:43,417:INFO:Importing untrained model
2022-12-30 04:43:43,437:INFO:Random Forest Regressor Imported succesfully
2022-12-30 04:43:43,473:INFO:Starting cross validation
2022-12-30 04:43:43,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:44:44,235:INFO:Calculating mean and std
2022-12-30 04:44:44,237:INFO:Creating metrics dataframe
2022-12-30 04:44:44,254:INFO:Uploading results into container
2022-12-30 04:44:44,254:INFO:Uploading model into container now
2022-12-30 04:44:44,255:INFO:create_model_container: 12
2022-12-30 04:44:44,255:INFO:master_model_container: 12
2022-12-30 04:44:44,255:INFO:display_container: 2
2022-12-30 04:44:44,260:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2022-12-30 04:44:44,261:INFO:create_model() succesfully completed......................................
2022-12-30 04:44:44,463:INFO:SubProcess create_model() end ==================================
2022-12-30 04:44:44,463:INFO:Creating metrics dataframe
2022-12-30 04:44:44,510:INFO:Initializing Extra Trees Regressor
2022-12-30 04:44:44,510:INFO:Total runtime is 1.7253527124722798 minutes
2022-12-30 04:44:44,528:INFO:SubProcess create_model() called ==================================
2022-12-30 04:44:44,529:INFO:Initializing create_model()
2022-12-30 04:44:44,529:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:44:44,530:INFO:Checking exceptions
2022-12-30 04:44:44,530:INFO:Importing libraries
2022-12-30 04:44:44,530:INFO:Copying training dataset
2022-12-30 04:44:44,533:INFO:Defining folds
2022-12-30 04:44:44,534:INFO:Declaring metric variables
2022-12-30 04:44:44,561:INFO:Importing untrained model
2022-12-30 04:44:44,581:INFO:Extra Trees Regressor Imported succesfully
2022-12-30 04:44:44,626:INFO:Starting cross validation
2022-12-30 04:44:44,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:45:36,360:INFO:Calculating mean and std
2022-12-30 04:45:36,364:INFO:Creating metrics dataframe
2022-12-30 04:45:36,382:INFO:Uploading results into container
2022-12-30 04:45:36,383:INFO:Uploading model into container now
2022-12-30 04:45:36,384:INFO:create_model_container: 13
2022-12-30 04:45:36,384:INFO:master_model_container: 13
2022-12-30 04:45:36,384:INFO:display_container: 2
2022-12-30 04:45:36,394:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2022-12-30 04:45:36,394:INFO:create_model() succesfully completed......................................
2022-12-30 04:45:36,567:INFO:SubProcess create_model() end ==================================
2022-12-30 04:45:36,567:INFO:Creating metrics dataframe
2022-12-30 04:45:36,614:INFO:Initializing AdaBoost Regressor
2022-12-30 04:45:36,614:INFO:Total runtime is 2.593762695789337 minutes
2022-12-30 04:45:36,644:INFO:SubProcess create_model() called ==================================
2022-12-30 04:45:36,645:INFO:Initializing create_model()
2022-12-30 04:45:36,645:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:45:36,645:INFO:Checking exceptions
2022-12-30 04:45:36,646:INFO:Importing libraries
2022-12-30 04:45:36,646:INFO:Copying training dataset
2022-12-30 04:45:36,648:INFO:Defining folds
2022-12-30 04:45:36,649:INFO:Declaring metric variables
2022-12-30 04:45:36,677:INFO:Importing untrained model
2022-12-30 04:45:36,696:INFO:AdaBoost Regressor Imported succesfully
2022-12-30 04:45:36,738:INFO:Starting cross validation
2022-12-30 04:45:36,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:45:50,147:INFO:Calculating mean and std
2022-12-30 04:45:50,147:INFO:Creating metrics dataframe
2022-12-30 04:45:50,154:INFO:Uploading results into container
2022-12-30 04:45:50,154:INFO:Uploading model into container now
2022-12-30 04:45:50,154:INFO:create_model_container: 14
2022-12-30 04:45:50,154:INFO:master_model_container: 14
2022-12-30 04:45:50,154:INFO:display_container: 2
2022-12-30 04:45:50,160:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2022-12-30 04:45:50,160:INFO:create_model() succesfully completed......................................
2022-12-30 04:45:50,285:INFO:SubProcess create_model() end ==================================
2022-12-30 04:45:50,285:INFO:Creating metrics dataframe
2022-12-30 04:45:50,301:INFO:Initializing Gradient Boosting Regressor
2022-12-30 04:45:50,301:INFO:Total runtime is 2.8218713998794556 minutes
2022-12-30 04:45:50,329:INFO:SubProcess create_model() called ==================================
2022-12-30 04:45:50,330:INFO:Initializing create_model()
2022-12-30 04:45:50,330:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:45:50,330:INFO:Checking exceptions
2022-12-30 04:45:50,330:INFO:Importing libraries
2022-12-30 04:45:50,331:INFO:Copying training dataset
2022-12-30 04:45:50,333:INFO:Defining folds
2022-12-30 04:45:50,333:INFO:Declaring metric variables
2022-12-30 04:45:50,360:INFO:Importing untrained model
2022-12-30 04:45:50,382:INFO:Gradient Boosting Regressor Imported succesfully
2022-12-30 04:45:50,422:INFO:Starting cross validation
2022-12-30 04:45:50,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:46:05,471:INFO:Calculating mean and std
2022-12-30 04:46:05,471:INFO:Creating metrics dataframe
2022-12-30 04:46:05,471:INFO:Uploading results into container
2022-12-30 04:46:05,471:INFO:Uploading model into container now
2022-12-30 04:46:05,471:INFO:create_model_container: 15
2022-12-30 04:46:05,471:INFO:master_model_container: 15
2022-12-30 04:46:05,471:INFO:display_container: 2
2022-12-30 04:46:05,487:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-12-30 04:46:05,487:INFO:create_model() succesfully completed......................................
2022-12-30 04:46:05,596:INFO:SubProcess create_model() end ==================================
2022-12-30 04:46:05,596:INFO:Creating metrics dataframe
2022-12-30 04:46:05,627:INFO:Initializing Light Gradient Boosting Machine
2022-12-30 04:46:05,627:INFO:Total runtime is 3.07731146812439 minutes
2022-12-30 04:46:05,646:INFO:SubProcess create_model() called ==================================
2022-12-30 04:46:05,647:INFO:Initializing create_model()
2022-12-30 04:46:05,647:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:46:05,647:INFO:Checking exceptions
2022-12-30 04:46:05,648:INFO:Importing libraries
2022-12-30 04:46:05,648:INFO:Copying training dataset
2022-12-30 04:46:05,650:INFO:Defining folds
2022-12-30 04:46:05,650:INFO:Declaring metric variables
2022-12-30 04:46:05,664:INFO:Importing untrained model
2022-12-30 04:46:05,675:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 04:46:05,719:INFO:Starting cross validation
2022-12-30 04:46:05,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:46:07,232:INFO:Calculating mean and std
2022-12-30 04:46:07,232:INFO:Creating metrics dataframe
2022-12-30 04:46:07,259:INFO:Uploading results into container
2022-12-30 04:46:07,261:INFO:Uploading model into container now
2022-12-30 04:46:07,262:INFO:create_model_container: 16
2022-12-30 04:46:07,262:INFO:master_model_container: 16
2022-12-30 04:46:07,263:INFO:display_container: 2
2022-12-30 04:46:07,272:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:46:07,273:INFO:create_model() succesfully completed......................................
2022-12-30 04:46:07,396:INFO:SubProcess create_model() end ==================================
2022-12-30 04:46:07,396:INFO:Creating metrics dataframe
2022-12-30 04:46:07,411:INFO:Initializing Dummy Regressor
2022-12-30 04:46:07,411:INFO:Total runtime is 3.1070426583290103 minutes
2022-12-30 04:46:07,435:INFO:SubProcess create_model() called ==================================
2022-12-30 04:46:07,436:INFO:Initializing create_model()
2022-12-30 04:46:07,436:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB1E4C8>, kwargs={})
2022-12-30 04:46:07,436:INFO:Checking exceptions
2022-12-30 04:46:07,436:INFO:Importing libraries
2022-12-30 04:46:07,436:INFO:Copying training dataset
2022-12-30 04:46:07,439:INFO:Defining folds
2022-12-30 04:46:07,439:INFO:Declaring metric variables
2022-12-30 04:46:07,449:INFO:Importing untrained model
2022-12-30 04:46:07,465:INFO:Dummy Regressor Imported succesfully
2022-12-30 04:46:07,494:INFO:Starting cross validation
2022-12-30 04:46:07,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:46:07,742:INFO:Calculating mean and std
2022-12-30 04:46:07,742:INFO:Creating metrics dataframe
2022-12-30 04:46:07,742:INFO:Uploading results into container
2022-12-30 04:46:07,742:INFO:Uploading model into container now
2022-12-30 04:46:07,742:INFO:create_model_container: 17
2022-12-30 04:46:07,742:INFO:master_model_container: 17
2022-12-30 04:46:07,742:INFO:display_container: 2
2022-12-30 04:46:07,758:INFO:PowerTransformedTargetRegressor(constant=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                quantile=None,
                                regressor=DummyRegressor(constant=None,
                                                         quantile=None,
                                                         strategy='mean'),
                                strategy='mean')
2022-12-30 04:46:07,758:INFO:create_model() succesfully completed......................................
2022-12-30 04:46:07,867:INFO:SubProcess create_model() end ==================================
2022-12-30 04:46:07,867:INFO:Creating metrics dataframe
2022-12-30 04:46:07,923:INFO:Initializing create_model()
2022-12-30 04:46:07,924:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-30 04:46:07,924:INFO:Checking exceptions
2022-12-30 04:46:07,924:INFO:Importing libraries
2022-12-30 04:46:07,925:INFO:Copying training dataset
2022-12-30 04:46:07,927:INFO:Defining folds
2022-12-30 04:46:07,927:INFO:Declaring metric variables
2022-12-30 04:46:07,927:INFO:Importing untrained model
2022-12-30 04:46:07,928:INFO:Declaring custom model
2022-12-30 04:46:07,929:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 04:46:07,929:INFO:Cross validation set to False
2022-12-30 04:46:07,929:INFO:Fitting Model
2022-12-30 04:46:08,210:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:46:08,210:INFO:create_models() succesfully completed......................................
2022-12-30 04:46:08,350:INFO:Creating MLFlow logs
2022-12-30 04:46:08,375:INFO:Model: Light Gradient Boosting Machine
2022-12-30 04:46:08,421:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-30 04:46:08,515:INFO:Initializing predict_model()
2022-12-30 04:46:08,515:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 04:46:08,515:INFO:Checking exceptions
2022-12-30 04:46:08,515:INFO:Preloading libraries
2022-12-30 04:46:08,952:INFO:Creating MLFlow logs
2022-12-30 04:46:08,970:INFO:Model: Extra Trees Regressor
2022-12-30 04:46:09,015:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:09,016:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:09,016:INFO:logged params: {}
2022-12-30 04:46:09,219:INFO:Creating MLFlow logs
2022-12-30 04:46:09,245:INFO:Model: Random Forest Regressor
2022-12-30 04:46:09,283:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:09,283:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:09,283:INFO:logged params: {}
2022-12-30 04:46:09,502:INFO:Creating MLFlow logs
2022-12-30 04:46:09,526:INFO:Model: Gradient Boosting Regressor
2022-12-30 04:46:09,563:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:09,563:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:09,563:INFO:logged params: {}
2022-12-30 04:46:09,797:INFO:Creating MLFlow logs
2022-12-30 04:46:09,812:INFO:Model: K Neighbors Regressor
2022-12-30 04:46:09,849:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:09,849:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:09,849:INFO:logged params: {}
2022-12-30 04:46:10,068:INFO:Creating MLFlow logs
2022-12-30 04:46:10,090:INFO:Model: Bayesian Ridge
2022-12-30 04:46:10,128:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:10,128:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:10,128:INFO:logged params: {}
2022-12-30 04:46:10,347:INFO:Creating MLFlow logs
2022-12-30 04:46:10,365:INFO:Model: Ridge Regression
2022-12-30 04:46:10,403:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:10,403:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:10,403:INFO:logged params: {}
2022-12-30 04:46:10,622:INFO:Creating MLFlow logs
2022-12-30 04:46:10,642:INFO:Model: Huber Regressor
2022-12-30 04:46:10,681:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:10,681:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:10,681:INFO:logged params: {}
2022-12-30 04:46:10,900:INFO:Creating MLFlow logs
2022-12-30 04:46:10,914:INFO:Model: Linear Regression
2022-12-30 04:46:10,951:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:10,951:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:10,951:INFO:logged params: {}
2022-12-30 04:46:11,170:INFO:Creating MLFlow logs
2022-12-30 04:46:11,194:INFO:Model: Decision Tree Regressor
2022-12-30 04:46:11,234:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:11,234:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:11,234:INFO:logged params: {}
2022-12-30 04:46:11,453:INFO:Creating MLFlow logs
2022-12-30 04:46:11,472:INFO:Model: PowerTransformedTargetRegressor
2022-12-30 04:46:11,509:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:11,509:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:11,509:INFO:logged params: {}
2022-12-30 04:46:11,728:INFO:Creating MLFlow logs
2022-12-30 04:46:11,752:INFO:Model: Orthogonal Matching Pursuit
2022-12-30 04:46:11,790:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:11,790:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:11,790:INFO:logged params: {}
2022-12-30 04:46:12,009:INFO:Creating MLFlow logs
2022-12-30 04:46:12,029:INFO:Model: Passive Aggressive Regressor
2022-12-30 04:46:12,066:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:12,066:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:12,066:INFO:logged params: {}
2022-12-30 04:46:12,285:INFO:Creating MLFlow logs
2022-12-30 04:46:12,305:INFO:Model: Elastic Net
2022-12-30 04:46:12,337:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:12,337:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:12,337:INFO:logged params: {}
2022-12-30 04:46:12,556:INFO:Creating MLFlow logs
2022-12-30 04:46:12,571:INFO:Model: Lasso Regression
2022-12-30 04:46:12,609:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:12,609:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:12,609:INFO:logged params: {}
2022-12-30 04:46:12,828:INFO:Creating MLFlow logs
2022-12-30 04:46:12,845:INFO:Model: Least Angle Regression
2022-12-30 04:46:12,884:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:12,884:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:12,884:INFO:logged params: {}
2022-12-30 04:46:13,103:INFO:Creating MLFlow logs
2022-12-30 04:46:13,121:INFO:Model: Dummy Regressor
2022-12-30 04:46:13,156:WARNING:Couldn't get params for model. Exception:
2022-12-30 04:46:13,156:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-30 04:46:13,156:INFO:logged params: {}
2022-12-30 04:46:13,405:INFO:create_model_container: 17
2022-12-30 04:46:13,405:INFO:master_model_container: 17
2022-12-30 04:46:13,405:INFO:display_container: 2
2022-12-30 04:46:13,408:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:46:13,408:INFO:compare_models() succesfully completed......................................
2022-12-30 04:48:10,185:INFO:Initializing tune_model()
2022-12-30 04:48:10,185:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2022-12-30 04:48:10,186:INFO:Checking exceptions
2022-12-30 04:48:10,186:INFO:Preparing display monitor
2022-12-30 04:48:10,209:INFO:Copying training dataset
2022-12-30 04:48:10,211:INFO:Checking base model
2022-12-30 04:48:10,212:INFO:Base model : Light Gradient Boosting Machine
2022-12-30 04:48:10,228:INFO:Declaring metric variables
2022-12-30 04:48:10,244:INFO:Defining Hyperparameters
2022-12-30 04:48:10,359:INFO:Tuning with n_jobs=-1
2022-12-30 04:48:10,359:INFO:Initializing RandomizedSearchCV
2022-12-30 04:48:25,220:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 66, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 0.7}
2022-12-30 04:48:25,220:INFO:Hyperparameter search completed
2022-12-30 04:48:25,220:INFO:SubProcess create_model() called ==================================
2022-12-30 04:48:25,225:INFO:Initializing create_model()
2022-12-30 04:48:25,226:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56AE07448>, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0005, 'num_leaves': 90, 'n_estimators': 90, 'min_split_gain': 0.4, 'min_child_samples': 66, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7})
2022-12-30 04:48:25,226:INFO:Checking exceptions
2022-12-30 04:48:25,226:INFO:Importing libraries
2022-12-30 04:48:25,226:INFO:Copying training dataset
2022-12-30 04:48:25,228:INFO:Defining folds
2022-12-30 04:48:25,228:INFO:Declaring metric variables
2022-12-30 04:48:25,246:INFO:Importing untrained model
2022-12-30 04:48:25,247:INFO:Declaring custom model
2022-12-30 04:48:25,266:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 04:48:25,310:INFO:Starting cross validation
2022-12-30 04:48:25,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:48:26,756:INFO:Calculating mean and std
2022-12-30 04:48:26,756:INFO:Creating metrics dataframe
2022-12-30 04:48:26,779:INFO:Finalizing model
2022-12-30 04:48:27,121:INFO:Uploading results into container
2022-12-30 04:48:27,121:INFO:Uploading model into container now
2022-12-30 04:48:27,121:INFO:create_model_container: 18
2022-12-30 04:48:27,121:INFO:master_model_container: 18
2022-12-30 04:48:27,121:INFO:display_container: 3
2022-12-30 04:48:27,133:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:48:27,133:INFO:create_model() succesfully completed......................................
2022-12-30 04:48:27,287:INFO:SubProcess create_model() end ==================================
2022-12-30 04:48:27,287:INFO:Creating MLFlow logs
2022-12-30 04:48:27,308:INFO:Model: Light Gradient Boosting Machine
2022-12-30 04:48:27,368:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 66, 'min_child_weight': 0.001, 'min_split_gain': 0.4, 'n_estimators': 90, 'n_jobs': -1, 'num_leaves': 90, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.1, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7}
2022-12-30 04:48:27,493:INFO:Initializing predict_model()
2022-12-30 04:48:27,493:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 04:48:27,493:INFO:Checking exceptions
2022-12-30 04:48:27,493:INFO:Preloading libraries
2022-12-30 04:48:27,951:INFO:create_model_container: 18
2022-12-30 04:48:27,951:INFO:master_model_container: 18
2022-12-30 04:48:27,952:INFO:display_container: 3
2022-12-30 04:48:27,954:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:48:27,954:INFO:tune_model() succesfully completed......................................
2022-12-30 04:49:01,534:INFO:Initializing create_model()
2022-12-30 04:49:01,535:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-30 04:49:01,535:INFO:Checking exceptions
2022-12-30 04:49:01,535:INFO:Preparing display monitor
2022-12-30 04:49:01,558:INFO:Importing libraries
2022-12-30 04:49:01,558:INFO:Copying training dataset
2022-12-30 04:49:01,561:INFO:Defining folds
2022-12-30 04:49:01,561:INFO:Declaring metric variables
2022-12-30 04:49:01,576:INFO:Importing untrained model
2022-12-30 04:49:01,591:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 04:49:01,626:INFO:Starting cross validation
2022-12-30 04:49:01,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:49:03,196:INFO:Calculating mean and std
2022-12-30 04:49:03,196:INFO:Creating metrics dataframe
2022-12-30 04:49:03,214:INFO:Finalizing model
2022-12-30 04:49:03,523:INFO:Creating MLFlow logs
2022-12-30 04:49:03,549:INFO:Model: Light Gradient Boosting Machine
2022-12-30 04:49:03,607:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-30 04:49:03,700:INFO:Initializing predict_model()
2022-12-30 04:49:03,700:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 04:49:03,700:INFO:Checking exceptions
2022-12-30 04:49:03,700:INFO:Preloading libraries
2022-12-30 04:49:04,107:INFO:Uploading results into container
2022-12-30 04:49:04,107:INFO:Uploading model into container now
2022-12-30 04:49:04,128:INFO:create_model_container: 19
2022-12-30 04:49:04,128:INFO:master_model_container: 19
2022-12-30 04:49:04,129:INFO:display_container: 4
2022-12-30 04:49:04,132:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:49:04,133:INFO:create_model() succesfully completed......................................
2022-12-30 04:49:35,557:INFO:Initializing tune_model()
2022-12-30 04:49:35,557:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2022-12-30 04:49:35,557:INFO:Checking exceptions
2022-12-30 04:49:35,558:INFO:Preparing display monitor
2022-12-30 04:49:35,579:INFO:Copying training dataset
2022-12-30 04:49:35,579:INFO:Checking base model
2022-12-30 04:49:35,588:INFO:Base model : Light Gradient Boosting Machine
2022-12-30 04:49:35,602:INFO:Declaring metric variables
2022-12-30 04:49:35,619:INFO:Defining Hyperparameters
2022-12-30 04:49:35,749:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2022-12-30 04:49:35,749:INFO:Tuning with n_jobs=-1
2022-12-30 04:49:35,749:INFO:Initializing RandomizedSearchCV
2022-12-30 04:49:56,791:INFO:best_params: {'actual_estimator__num_leaves': 120, 'actual_estimator__max_depth': 60, 'actual_estimator__learning_rate': 0.1}
2022-12-30 04:49:56,791:INFO:Hyperparameter search completed
2022-12-30 04:49:56,791:INFO:SubProcess create_model() called ==================================
2022-12-30 04:49:56,791:INFO:Initializing create_model()
2022-12-30 04:49:56,791:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001B56CB5A388>, kwargs={'num_leaves': 120, 'max_depth': 60, 'learning_rate': 0.1})
2022-12-30 04:49:56,791:INFO:Checking exceptions
2022-12-30 04:49:56,791:INFO:Importing libraries
2022-12-30 04:49:56,791:INFO:Copying training dataset
2022-12-30 04:49:56,791:INFO:Defining folds
2022-12-30 04:49:56,791:INFO:Declaring metric variables
2022-12-30 04:49:56,816:INFO:Importing untrained model
2022-12-30 04:49:56,817:INFO:Declaring custom model
2022-12-30 04:49:56,836:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 04:49:56,873:INFO:Starting cross validation
2022-12-30 04:49:56,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 04:50:00,142:INFO:Calculating mean and std
2022-12-30 04:50:00,142:INFO:Creating metrics dataframe
2022-12-30 04:50:00,189:INFO:Finalizing model
2022-12-30 04:50:01,264:INFO:Uploading results into container
2022-12-30 04:50:01,264:INFO:Uploading model into container now
2022-12-30 04:50:01,264:INFO:create_model_container: 20
2022-12-30 04:50:01,264:INFO:master_model_container: 20
2022-12-30 04:50:01,264:INFO:display_container: 5
2022-12-30 04:50:01,277:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:50:01,277:INFO:create_model() succesfully completed......................................
2022-12-30 04:50:01,438:INFO:SubProcess create_model() end ==================================
2022-12-30 04:50:01,438:INFO:Creating MLFlow logs
2022-12-30 04:50:01,462:INFO:Model: Light Gradient Boosting Machine
2022-12-30 04:50:01,523:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 60, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 120, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-30 04:50:01,682:INFO:Initializing predict_model()
2022-12-30 04:50:01,683:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 04:50:01,683:INFO:Checking exceptions
2022-12-30 04:50:01,683:INFO:Preloading libraries
2022-12-30 04:50:02,323:INFO:create_model_container: 20
2022-12-30 04:50:02,324:INFO:master_model_container: 20
2022-12-30 04:50:02,324:INFO:display_container: 5
2022-12-30 04:50:02,328:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 04:50:02,329:INFO:tune_model() succesfully completed......................................
2022-12-30 04:51:00,480:INFO:Initializing plot_model()
2022-12-30 04:51:00,481:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals_interactive, save=False, scale=1, system=True)
2022-12-30 04:51:00,481:INFO:Checking exceptions
2022-12-30 04:51:00,482:INFO:Preparing display monitor
2022-12-30 04:51:00,494:INFO:Preloading libraries
2022-12-30 04:51:00,517:INFO:Copying training dataset
2022-12-30 04:51:00,519:INFO:Copying test dataset
2022-12-30 04:51:00,520:INFO:Plot type: residuals_interactive
2022-12-30 04:51:00,611:INFO:Calculated model residuals
2022-12-30 04:51:31,280:INFO:Calculated Tunkey-Anscombe Plot
2022-12-30 04:51:33,924:INFO:Calculated Normal QQ Plot
2022-12-30 04:52:08,825:INFO:Calculated Scale-Location Plot
2022-12-30 04:52:30,098:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-12-30 04:52:30,302:INFO:Visual Rendered Successfully
2022-12-30 04:52:30,427:INFO:plot_model() succesfully completed......................................
2022-12-30 04:53:33,631:INFO:Initializing plot_model()
2022-12-30 04:53:33,631:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, save=False, scale=1, system=True)
2022-12-30 04:53:33,632:INFO:Checking exceptions
2022-12-30 04:53:33,632:INFO:Preparing display monitor
2022-12-30 04:53:33,640:INFO:Preloading libraries
2022-12-30 04:53:33,658:INFO:Copying training dataset
2022-12-30 04:53:33,660:INFO:Copying test dataset
2022-12-30 04:53:33,661:INFO:Plot type: feature
2022-12-30 04:53:33,664:WARNING:No coef_ found. Trying feature_importances_
2022-12-30 04:53:33,856:INFO:Visual Rendered Successfully
2022-12-30 04:53:33,965:INFO:plot_model() succesfully completed......................................
2022-12-30 04:54:59,343:INFO:Initializing plot_model()
2022-12-30 04:54:59,344:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=error, save=False, scale=1, system=True)
2022-12-30 04:54:59,344:INFO:Checking exceptions
2022-12-30 04:54:59,345:INFO:Preparing display monitor
2022-12-30 04:54:59,353:INFO:Preloading libraries
2022-12-30 04:54:59,371:INFO:Copying training dataset
2022-12-30 04:54:59,374:INFO:Copying test dataset
2022-12-30 04:54:59,375:INFO:Plot type: error
2022-12-30 04:54:59,486:INFO:Fitting Model
2022-12-30 04:54:59,486:INFO:Scoring test/hold-out set
2022-12-30 04:55:00,068:INFO:Visual Rendered Successfully
2022-12-30 04:55:00,248:INFO:plot_model() succesfully completed......................................
2022-12-30 04:55:51,101:INFO:Initializing evaluate_model()
2022-12-30 04:55:51,101:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-12-30 04:55:51,121:INFO:Initializing plot_model()
2022-12-30 04:55:51,121:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, save=False, scale=1, system=True)
2022-12-30 04:55:51,122:INFO:Checking exceptions
2022-12-30 04:55:51,122:INFO:Preparing display monitor
2022-12-30 04:55:51,129:INFO:Preloading libraries
2022-12-30 04:55:51,143:INFO:Copying training dataset
2022-12-30 04:55:51,143:INFO:Copying test dataset
2022-12-30 04:55:51,143:INFO:Plot type: parameter
2022-12-30 04:55:51,159:INFO:Visual Rendered Successfully
2022-12-30 04:55:51,315:INFO:plot_model() succesfully completed......................................
2022-12-30 04:56:15,559:INFO:Initializing plot_model()
2022-12-30 04:56:15,559:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=residuals, save=False, scale=1, system=True)
2022-12-30 04:56:15,559:INFO:Checking exceptions
2022-12-30 04:56:15,560:INFO:Preparing display monitor
2022-12-30 04:56:15,567:INFO:Preloading libraries
2022-12-30 04:56:15,583:INFO:Copying training dataset
2022-12-30 04:56:15,585:INFO:Copying test dataset
2022-12-30 04:56:15,586:INFO:Plot type: residuals
2022-12-30 04:56:15,634:INFO:Fitting Model
2022-12-30 04:56:15,802:INFO:Scoring test/hold-out set
2022-12-30 04:56:16,521:INFO:Visual Rendered Successfully
2022-12-30 04:56:16,631:INFO:plot_model() succesfully completed......................................
2022-12-30 04:56:19,380:INFO:Initializing plot_model()
2022-12-30 04:56:19,380:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, save=False, scale=1, system=True)
2022-12-30 04:56:19,380:INFO:Checking exceptions
2022-12-30 04:56:19,381:INFO:Preparing display monitor
2022-12-30 04:56:19,388:INFO:Preloading libraries
2022-12-30 04:56:19,406:INFO:Copying training dataset
2022-12-30 04:56:19,408:INFO:Copying test dataset
2022-12-30 04:56:19,408:INFO:Plot type: error
2022-12-30 04:56:19,411:INFO:Fitting Model
2022-12-30 04:56:19,412:INFO:Scoring test/hold-out set
2022-12-30 04:56:19,785:INFO:Visual Rendered Successfully
2022-12-30 04:56:19,900:INFO:plot_model() succesfully completed......................................
2022-12-30 04:56:22,019:INFO:Initializing plot_model()
2022-12-30 04:56:22,020:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=cooks, save=False, scale=1, system=True)
2022-12-30 04:56:22,020:INFO:Checking exceptions
2022-12-30 04:56:22,020:INFO:Preparing display monitor
2022-12-30 04:56:22,028:INFO:Preloading libraries
2022-12-30 04:56:22,047:INFO:Copying training dataset
2022-12-30 04:56:22,049:INFO:Copying test dataset
2022-12-30 04:56:22,049:INFO:Plot type: cooks
2022-12-30 04:56:22,052:INFO:Fitting Model
2022-12-30 04:56:23,194:INFO:Visual Rendered Successfully
2022-12-30 04:56:23,360:INFO:plot_model() succesfully completed......................................
2022-12-30 04:56:27,617:INFO:Initializing plot_model()
2022-12-30 04:56:27,617:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=rfe, save=False, scale=1, system=True)
2022-12-30 04:56:27,617:INFO:Checking exceptions
2022-12-30 04:56:27,618:INFO:Preparing display monitor
2022-12-30 04:56:27,625:INFO:Preloading libraries
2022-12-30 04:56:27,641:INFO:Copying training dataset
2022-12-30 04:56:27,643:INFO:Copying test dataset
2022-12-30 04:56:27,644:INFO:Plot type: rfe
2022-12-30 04:56:27,656:INFO:Fitting Model
2022-12-30 04:59:31,069:INFO:Initializing plot_model()
2022-12-30 04:59:31,069:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=manifold, save=False, scale=1, system=True)
2022-12-30 04:59:31,069:INFO:Checking exceptions
2022-12-30 04:59:31,069:INFO:Preparing display monitor
2022-12-30 04:59:31,076:INFO:Preloading libraries
2022-12-30 04:59:31,098:INFO:Copying training dataset
2022-12-30 04:59:31,098:INFO:Copying test dataset
2022-12-30 04:59:31,098:INFO:Plot type: manifold
2022-12-30 04:59:31,162:INFO:Fitting & Transforming Model
2022-12-30 05:01:52,425:INFO:Visual Rendered Successfully
2022-12-30 05:01:52,576:INFO:plot_model() succesfully completed......................................
2022-12-30 05:01:52,593:INFO:Initializing plot_model()
2022-12-30 05:01:52,593:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=vc, save=False, scale=1, system=True)
2022-12-30 05:01:52,594:INFO:Checking exceptions
2022-12-30 05:01:52,594:INFO:Preparing display monitor
2022-12-30 05:01:52,601:INFO:Preloading libraries
2022-12-30 05:01:52,624:INFO:Copying training dataset
2022-12-30 05:01:52,627:INFO:Copying test dataset
2022-12-30 05:01:52,628:INFO:Plot type: vc
2022-12-30 05:01:52,630:INFO:Determining param_name
2022-12-30 05:01:52,631:INFO:param_name: actual_estimator__max_depth
2022-12-30 05:01:52,633:INFO:Fitting Model
2022-12-30 05:02:12,853:INFO:Visual Rendered Successfully
2022-12-30 05:02:12,994:INFO:plot_model() succesfully completed......................................
2022-12-30 05:02:13,018:INFO:Initializing plot_model()
2022-12-30 05:02:13,018:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature, save=False, scale=1, system=True)
2022-12-30 05:02:13,019:INFO:Checking exceptions
2022-12-30 05:02:13,019:INFO:Preparing display monitor
2022-12-30 05:02:13,025:INFO:Preloading libraries
2022-12-30 05:02:13,056:INFO:Copying training dataset
2022-12-30 05:02:13,060:INFO:Copying test dataset
2022-12-30 05:02:13,061:INFO:Plot type: feature
2022-12-30 05:02:13,064:WARNING:No coef_ found. Trying feature_importances_
2022-12-30 05:02:13,296:INFO:Visual Rendered Successfully
2022-12-30 05:02:13,421:INFO:plot_model() succesfully completed......................................
2022-12-30 05:02:13,450:INFO:Initializing plot_model()
2022-12-30 05:02:13,450:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature_all, save=False, scale=1, system=True)
2022-12-30 05:02:13,451:INFO:Checking exceptions
2022-12-30 05:02:13,452:INFO:Preparing display monitor
2022-12-30 05:02:13,457:INFO:Preloading libraries
2022-12-30 05:02:13,483:INFO:Copying training dataset
2022-12-30 05:02:13,485:INFO:Copying test dataset
2022-12-30 05:02:13,486:INFO:Plot type: feature_all
2022-12-30 05:02:13,488:WARNING:No coef_ found. Trying feature_importances_
2022-12-30 05:02:14,432:INFO:Visual Rendered Successfully
2022-12-30 05:02:14,614:INFO:plot_model() succesfully completed......................................
2022-12-30 05:02:14,650:INFO:Initializing plot_model()
2022-12-30 05:02:14,650:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=tree, save=False, scale=1, system=True)
2022-12-30 05:02:14,650:INFO:Checking exceptions
2022-12-30 05:03:27,362:INFO:Initializing plot_model()
2022-12-30 05:03:27,362:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, save=False, scale=1, system=True)
2022-12-30 05:03:27,362:INFO:Checking exceptions
2022-12-30 05:03:27,362:INFO:Preparing display monitor
2022-12-30 05:03:27,369:INFO:Preloading libraries
2022-12-30 05:03:27,385:INFO:Copying training dataset
2022-12-30 05:03:27,387:INFO:Copying test dataset
2022-12-30 05:03:27,388:INFO:Plot type: parameter
2022-12-30 05:03:27,403:INFO:Visual Rendered Successfully
2022-12-30 05:03:27,558:INFO:plot_model() succesfully completed......................................
2022-12-30 05:06:56,747:INFO:Initializing predict_model()
2022-12-30 05:06:56,747:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2022-12-30 05:06:56,747:INFO:Checking exceptions
2022-12-30 05:06:56,747:INFO:Preloading libraries
2022-12-30 05:06:56,748:INFO:Preparing display monitor
2022-12-30 05:08:25,194:INFO:Initializing finalize_model()
2022-12-30 05:08:25,194:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=True, display=None)
2022-12-30 05:08:25,197:INFO:Finalizing PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 05:08:25,202:INFO:Initializing create_model()
2022-12-30 05:08:25,202:INFO:create_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, add_to_model_list=False, probability_threshold=None, display=None, kwargs={})
2022-12-30 05:08:25,202:INFO:Checking exceptions
2022-12-30 05:08:25,202:INFO:Importing libraries
2022-12-30 05:08:25,202:INFO:Copying training dataset
2022-12-30 05:08:25,204:INFO:Defining folds
2022-12-30 05:08:25,204:INFO:Declaring metric variables
2022-12-30 05:08:25,204:INFO:Importing untrained model
2022-12-30 05:08:25,204:INFO:Declaring custom model
2022-12-30 05:08:25,207:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 05:08:25,208:INFO:Starting cross validation
2022-12-30 05:08:25,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 05:08:33,596:INFO:Calculating mean and std
2022-12-30 05:08:33,598:INFO:Creating metrics dataframe
2022-12-30 05:08:33,604:INFO:Finalizing model
2022-12-30 05:08:33,995:INFO:create_model_container: 20
2022-12-30 05:08:33,995:INFO:master_model_container: 20
2022-12-30 05:08:33,995:INFO:display_container: 7
2022-12-30 05:08:33,995:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 05:08:33,995:INFO:create_model() succesfully completed......................................
2022-12-30 05:08:34,155:INFO:Creating MLFlow logs
2022-12-30 05:08:34,171:INFO:Model: Light Gradient Boosting Machine
2022-12-30 05:08:34,202:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 66, 'min_child_weight': 0.001, 'min_split_gain': 0.4, 'n_estimators': 90, 'n_jobs': -1, 'num_leaves': 90, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.1, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7}
2022-12-30 05:08:34,312:INFO:Initializing predict_model()
2022-12-30 05:08:34,312:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 05:08:34,312:INFO:Checking exceptions
2022-12-30 05:08:34,312:INFO:Preloading libraries
2022-12-30 05:08:34,763:INFO:create_model_container: 20
2022-12-30 05:08:34,763:INFO:master_model_container: 20
2022-12-30 05:08:34,763:INFO:display_container: 6
2022-12-30 05:08:34,766:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 05:08:34,766:INFO:finalize_model() succesfully completed......................................
2022-12-30 05:08:34,902:INFO:Initializing save_model()
2022-12-30 05:08:34,902:INFO:save_model(model=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), model_name=house_price_pre-pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-12-30 05:08:34,902:INFO:Adding model into prep_pipe
2022-12-30 05:08:34,949:INFO:house_price_pre-pipeline.pkl saved in current working directory
2022-12-30 05:08:34,965:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                                                                         learning_rate=0.1,
                                                                         max_depth=-1,
                                                                         min_child_samples=66,
                                                                         min_child_weight=0.001,
                                                                         min_split_gain=0.4,
                                                                         n_estimators=90,
                                                                         n_jobs=-1,
                                                                         num_leaves=90,
                                                                         objective=None,
                                                                         random_state=123,
                                                                         reg_alpha=0.0005,
                                                                         reg_lambda=0.1,
                                                                         silent='warn',
                                                                         subsample=1.0,
                                                                         subsample_for_bin=200000,
                                                                         subsample_freq=0),
                                                 silent='warn', subsample=1.0,
                                                 subsample_for_bin=200000,
                                                 subsample_freq=0)]],
         verbose=False)
2022-12-30 05:08:34,980:INFO:save_model() successfully completed......................................
2022-12-30 05:10:33,490:INFO:Initializing predict_model()
2022-12-30 05:10:33,490:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2022-12-30 05:10:33,490:INFO:Checking exceptions
2022-12-30 05:10:33,490:INFO:Preloading libraries
2022-12-30 05:10:33,491:INFO:Preparing display monitor
2022-12-30 07:12:23,971:INFO:Initializing interpret_model()
2022-12-30 07:12:23,972:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2022-12-30 07:12:23,973:INFO:Checking exceptions
2022-12-30 07:12:23,983:ERROR:shap library not found. pip install shap to use interpret_model function.
2022-12-30 07:13:22,753:INFO:Initializing interpret_model()
2022-12-30 07:13:22,753:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2022-12-30 07:13:22,754:INFO:Checking exceptions
2022-12-30 07:13:23,078:INFO:plot type: summary
2022-12-30 07:13:23,078:INFO:Creating TreeExplainer
2022-12-30 07:13:23,400:INFO:Compiling shap values
2022-12-30 07:13:30,272:INFO:Visual Rendered Successfully
2022-12-30 07:13:30,272:INFO:interpret_model() succesfully completed......................................
2022-12-30 07:15:33,011:INFO:Initializing interpret_model()
2022-12-30 07:15:33,011:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=12, plot=reason, save=False)
2022-12-30 07:15:33,012:INFO:Checking exceptions
2022-12-30 07:15:33,012:INFO:plot type: reason
2022-12-30 07:15:33,013:INFO:model type detected: type 2
2022-12-30 07:15:33,013:INFO:Creating TreeExplainer
2022-12-30 07:15:33,304:INFO:Compiling shap values
2022-12-30 07:15:37,270:INFO:Visual Rendered Successfully
2022-12-30 07:15:37,270:INFO:interpret_model() succesfully completed......................................
2022-12-30 07:16:16,084:INFO:Initializing interpret_model()
2022-12-30 07:16:16,084:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=1, plot=reason, save=False)
2022-12-30 07:16:16,085:INFO:Checking exceptions
2022-12-30 07:16:16,085:INFO:plot type: reason
2022-12-30 07:16:16,085:INFO:model type detected: type 2
2022-12-30 07:16:16,086:INFO:Creating TreeExplainer
2022-12-30 07:16:16,341:INFO:Compiling shap values
2022-12-30 07:16:20,099:INFO:Visual Rendered Successfully
2022-12-30 07:16:20,099:INFO:interpret_model() succesfully completed......................................
2022-12-30 07:39:04,378:INFO:PyCaret Supervised Module
2022-12-30 07:39:04,378:INFO:ML Usecase: regression
2022-12-30 07:39:04,379:INFO:version 2.3.5
2022-12-30 07:39:04,379:INFO:Initializing setup()
2022-12-30 07:39:04,379:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-30 07:39:04,379:INFO:Checking environment
2022-12-30 07:39:04,379:INFO:python_version: 3.7.15
2022-12-30 07:39:04,380:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-30 07:39:04,380:INFO:machine: AMD64
2022-12-30 07:39:04,380:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-30 07:39:04,383:INFO:Memory: svmem(total=17053212672, available=8535416832, percent=49.9, used=8517795840, free=8535416832)
2022-12-30 07:39:04,384:INFO:Physical Core: 2
2022-12-30 07:39:04,384:INFO:Logical Core: 4
2022-12-30 07:39:04,384:INFO:Checking libraries
2022-12-30 07:39:04,385:INFO:pd==1.3.5
2022-12-30 07:39:04,385:INFO:numpy==1.19.5
2022-12-30 07:39:04,385:INFO:sklearn==0.23.2
2022-12-30 07:39:04,386:INFO:lightgbm==3.3.3
2022-12-30 07:39:04,391:WARNING:catboost not found
2022-12-30 07:39:04,397:WARNING:xgboost not found
2022-12-30 07:39:05,878:INFO:mlflow==1.30.0
2022-12-30 07:39:05,879:INFO:Checking Exceptions
2022-12-30 07:39:05,879:INFO:Declaring global variables
2022-12-30 07:39:05,879:INFO:USI: 41ac
2022-12-30 07:39:05,879:INFO:pycaret_globals: {'_all_metrics', 'X_test', 'stratify_param', 'imputation_classifier', 'data_before_preprocess', 'fold_shuffle_param', 'fix_imbalance_method_param', '_gpu_n_jobs_param', 'fold_groups_param_full', 'fold_param', 'transform_target_param', 'experiment__', 'log_plots_param', 'target_param', 'seed', 'y_test', 'n_jobs_param', 'transform_target_method_param', 'X_train', 'logging_param', 'prep_pipe', 'fold_groups_param', 'exp_name_log', 'X', 'master_model_container', 'iterative_imputation_iters_param', 'USI', 'display_container', '_ml_usecase', '_all_models_internal', '_available_plots', 'pycaret_globals', '_internal_pipeline', 'fix_imbalance_param', 'create_model_container', 'fold_generator', 'y', 'html_param', '_all_models', 'y_train', 'imputation_regressor', 'gpu_param'}
2022-12-30 07:39:05,879:INFO:Preparing display monitor
2022-12-30 07:39:05,879:INFO:Preparing display monitor
2022-12-30 07:39:05,902:INFO:Importing libraries
2022-12-30 07:39:05,902:INFO:Copying data for preprocessing
2022-12-30 07:39:05,917:INFO:Declaring preprocessing parameters
2022-12-30 07:39:05,922:INFO:Creating preprocessing pipeline
2022-12-30 07:39:06,023:INFO:Preprocessing pipeline created successfully
2022-12-30 07:39:06,023:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-12-30 07:39:06,023:INFO:Creating global containers
2022-12-30 07:39:06,039:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-12-30 07:39:09,431:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 07:39:09,431:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 07:39:09,704:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 07:39:09,704:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 07:39:09,704:INFO:Creating grid variables
2022-12-30 07:39:09,751:INFO:Logging experiment in MLFlow
2022-12-30 07:39:09,772:WARNING:Couldn't create mlflow experiment. Exception:
2022-12-30 07:39:09,782:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 1738, in setup
    mlflow.create_experiment(exp_name_log)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\fluent.py", line 1236, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\client.py", line 635, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 258, in create_experiment
    tags=[ExperimentTag(key, value) for (key, value) in tags.items()] if tags else [],
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 382, in create_experiment
    self._validate_experiment_does_not_exist(name)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 376, in _validate_experiment_does_not_exist
    databricks_pb2.RESOURCE_ALREADY_EXISTS,
mlflow.exceptions.MlflowException: Experiment 'king_county_house_pred' already exists.

2022-12-30 07:39:10,345:INFO:SubProcess save_model() called ==================================
2022-12-30 07:39:10,362:INFO:Initializing save_model()
2022-12-30 07:39:10,362:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-12-30 07:39:10,362:INFO:Adding model into prep_pipe
2022-12-30 07:39:10,378:WARNING:Only Model saved as it was a pipeline.
2022-12-30 07:39:10,396:INFO:Transformation Pipeline.pkl saved in current working directory
2022-12-30 07:39:10,413:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 07:39:10,413:INFO:save_model() successfully completed......................................
2022-12-30 07:39:10,513:INFO:SubProcess save_model() end ==================================
2022-12-30 07:39:10,693:INFO:create_model_container: 0
2022-12-30 07:39:10,693:INFO:master_model_container: 0
2022-12-30 07:39:10,693:INFO:display_container: 1
2022-12-30 07:39:10,706:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 07:39:10,706:INFO:setup() succesfully completed......................................
2022-12-30 07:39:10,835:INFO:Initializing create_model()
2022-12-30 07:39:10,835:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-30 07:39:10,835:INFO:Checking exceptions
2022-12-30 07:39:10,836:INFO:Preparing display monitor
2022-12-30 07:39:10,894:INFO:Importing libraries
2022-12-30 07:39:10,894:INFO:Copying training dataset
2022-12-30 07:39:10,899:INFO:Defining folds
2022-12-30 07:39:10,899:INFO:Declaring metric variables
2022-12-30 07:39:10,921:INFO:Importing untrained model
2022-12-30 07:39:10,954:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 07:39:11,041:INFO:Starting cross validation
2022-12-30 07:39:11,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 07:39:22,730:INFO:Calculating mean and std
2022-12-30 07:39:22,730:INFO:Creating metrics dataframe
2022-12-30 07:39:22,762:INFO:Finalizing model
2022-12-30 07:39:23,465:INFO:Creating MLFlow logs
2022-12-30 07:39:23,512:INFO:Model: Light Gradient Boosting Machine
2022-12-30 07:39:23,619:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-30 07:39:23,854:INFO:Initializing predict_model()
2022-12-30 07:39:23,855:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 07:39:23,855:INFO:Checking exceptions
2022-12-30 07:39:23,855:INFO:Preloading libraries
2022-12-30 07:39:24,364:INFO:Uploading results into container
2022-12-30 07:39:24,364:INFO:Uploading model into container now
2022-12-30 07:39:24,407:INFO:create_model_container: 1
2022-12-30 07:39:24,408:INFO:master_model_container: 1
2022-12-30 07:39:24,408:INFO:display_container: 2
2022-12-30 07:39:24,413:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 07:39:24,413:INFO:create_model() succesfully completed......................................
2022-12-30 10:13:19,045:INFO:PyCaret Supervised Module
2022-12-30 10:13:19,046:INFO:ML Usecase: regression
2022-12-30 10:13:19,046:INFO:version 2.3.5
2022-12-30 10:13:19,046:INFO:Initializing setup()
2022-12-30 10:13:19,046:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-30 10:13:19,047:INFO:Checking environment
2022-12-30 10:13:19,047:INFO:python_version: 3.7.15
2022-12-30 10:13:19,047:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-30 10:13:19,047:INFO:machine: AMD64
2022-12-30 10:13:19,047:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-30 10:13:19,051:INFO:Memory: svmem(total=17053212672, available=8274501632, percent=51.5, used=8778711040, free=8274501632)
2022-12-30 10:13:19,051:INFO:Physical Core: 2
2022-12-30 10:13:19,052:INFO:Logical Core: 4
2022-12-30 10:13:19,052:INFO:Checking libraries
2022-12-30 10:13:19,052:INFO:pd==1.3.5
2022-12-30 10:13:19,052:INFO:numpy==1.19.5
2022-12-30 10:13:19,052:INFO:sklearn==0.23.2
2022-12-30 10:13:19,053:INFO:lightgbm==3.3.3
2022-12-30 10:13:19,056:WARNING:catboost not found
2022-12-30 10:13:19,057:WARNING:xgboost not found
2022-12-30 10:13:19,057:INFO:mlflow==1.30.0
2022-12-30 10:13:19,058:INFO:Checking Exceptions
2022-12-30 10:13:19,058:INFO:Declaring global variables
2022-12-30 10:13:19,058:INFO:USI: e1af
2022-12-30 10:13:19,058:INFO:pycaret_globals: {'_all_metrics', 'X_test', 'stratify_param', 'imputation_classifier', 'data_before_preprocess', 'fold_shuffle_param', 'fix_imbalance_method_param', '_gpu_n_jobs_param', 'fold_groups_param_full', 'fold_param', 'transform_target_param', 'experiment__', 'log_plots_param', 'target_param', 'seed', 'y_test', 'n_jobs_param', 'transform_target_method_param', 'X_train', 'logging_param', 'prep_pipe', 'fold_groups_param', 'exp_name_log', 'X', 'master_model_container', 'iterative_imputation_iters_param', 'USI', 'display_container', '_ml_usecase', '_all_models_internal', '_available_plots', 'pycaret_globals', '_internal_pipeline', 'fix_imbalance_param', 'create_model_container', 'fold_generator', 'y', 'html_param', '_all_models', 'y_train', 'imputation_regressor', 'gpu_param'}
2022-12-30 10:13:19,058:INFO:Preparing display monitor
2022-12-30 10:13:19,058:INFO:Preparing display monitor
2022-12-30 10:13:19,077:INFO:Importing libraries
2022-12-30 10:13:19,077:INFO:Copying data for preprocessing
2022-12-30 10:13:19,090:INFO:Declaring preprocessing parameters
2022-12-30 10:13:19,095:INFO:Creating preprocessing pipeline
2022-12-30 10:13:19,141:INFO:Preprocessing pipeline created successfully
2022-12-30 10:13:19,141:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-12-30 10:13:19,141:INFO:Creating global containers
2022-12-30 10:13:19,141:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-12-30 10:13:20,561:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 10:13:20,561:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 10:13:20,655:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-30 10:13:20,655:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-30 10:13:20,655:INFO:Creating grid variables
2022-12-30 10:13:20,684:INFO:Logging experiment in MLFlow
2022-12-30 10:13:20,690:WARNING:Couldn't create mlflow experiment. Exception:
2022-12-30 10:13:20,691:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 1738, in setup
    mlflow.create_experiment(exp_name_log)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\fluent.py", line 1236, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\client.py", line 635, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 258, in create_experiment
    tags=[ExperimentTag(key, value) for (key, value) in tags.items()] if tags else [],
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 382, in create_experiment
    self._validate_experiment_does_not_exist(name)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 376, in _validate_experiment_does_not_exist
    databricks_pb2.RESOURCE_ALREADY_EXISTS,
mlflow.exceptions.MlflowException: Experiment 'king_county_house_pred' already exists.

2022-12-30 10:13:20,821:INFO:SubProcess save_model() called ==================================
2022-12-30 10:13:20,821:INFO:Initializing save_model()
2022-12-30 10:13:20,821:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-12-30 10:13:20,821:INFO:Adding model into prep_pipe
2022-12-30 10:13:20,821:WARNING:Only Model saved as it was a pipeline.
2022-12-30 10:13:20,836:INFO:Transformation Pipeline.pkl saved in current working directory
2022-12-30 10:13:20,836:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 10:13:20,836:INFO:save_model() successfully completed......................................
2022-12-30 10:13:20,946:INFO:SubProcess save_model() end ==================================
2022-12-30 10:13:20,993:INFO:create_model_container: 0
2022-12-30 10:13:20,993:INFO:master_model_container: 0
2022-12-30 10:13:20,993:INFO:display_container: 1
2022-12-30 10:13:20,993:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-30 10:13:20,993:INFO:setup() succesfully completed......................................
2022-12-30 10:13:25,180:INFO:Initializing create_model()
2022-12-30 10:13:25,180:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-30 10:13:25,181:INFO:Checking exceptions
2022-12-30 10:13:25,181:INFO:Preparing display monitor
2022-12-30 10:13:25,220:INFO:Importing libraries
2022-12-30 10:13:25,220:INFO:Copying training dataset
2022-12-30 10:13:25,223:INFO:Defining folds
2022-12-30 10:13:25,223:INFO:Declaring metric variables
2022-12-30 10:13:25,236:INFO:Importing untrained model
2022-12-30 10:13:25,248:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-30 10:13:25,281:INFO:Starting cross validation
2022-12-30 10:13:25,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-30 10:13:32,244:INFO:Calculating mean and std
2022-12-30 10:13:32,244:INFO:Creating metrics dataframe
2022-12-30 10:13:32,302:INFO:Finalizing model
2022-12-30 10:13:32,640:INFO:Creating MLFlow logs
2022-12-30 10:13:32,666:INFO:Model: Light Gradient Boosting Machine
2022-12-30 10:13:32,742:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-30 10:13:32,836:INFO:Initializing predict_model()
2022-12-30 10:13:32,836:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-30 10:13:32,836:INFO:Checking exceptions
2022-12-30 10:13:32,836:INFO:Preloading libraries
2022-12-30 10:13:33,149:INFO:Uploading results into container
2022-12-30 10:13:33,149:INFO:Uploading model into container now
2022-12-30 10:13:33,185:INFO:create_model_container: 1
2022-12-30 10:13:33,186:INFO:master_model_container: 1
2022-12-30 10:13:33,186:INFO:display_container: 2
2022-12-30 10:13:33,188:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-30 10:13:33,189:INFO:create_model() succesfully completed......................................
2022-12-31 01:04:33,660:INFO:PyCaret Supervised Module
2022-12-31 01:04:33,661:INFO:ML Usecase: regression
2022-12-31 01:04:33,661:INFO:version 2.3.5
2022-12-31 01:04:33,662:INFO:Initializing setup()
2022-12-31 01:04:33,663:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=king_county_house_pred, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-12-31 01:04:33,663:INFO:Checking environment
2022-12-31 01:04:33,663:INFO:python_version: 3.7.15
2022-12-31 01:04:33,664:INFO:python_build: ('default', 'Nov 24 2022 18:44:54')
2022-12-31 01:04:33,664:INFO:machine: AMD64
2022-12-31 01:04:33,664:INFO:platform: Windows-10-10.0.19041-SP0
2022-12-31 01:04:33,668:INFO:Memory: svmem(total=17053212672, available=10117820416, percent=40.7, used=6935392256, free=10117820416)
2022-12-31 01:04:33,668:INFO:Physical Core: 2
2022-12-31 01:04:33,668:INFO:Logical Core: 4
2022-12-31 01:04:33,669:INFO:Checking libraries
2022-12-31 01:04:33,669:INFO:pd==1.3.5
2022-12-31 01:04:33,669:INFO:numpy==1.19.5
2022-12-31 01:04:33,669:INFO:sklearn==0.23.2
2022-12-31 01:04:33,669:INFO:lightgbm==3.3.3
2022-12-31 01:04:33,671:WARNING:catboost not found
2022-12-31 01:04:33,673:WARNING:xgboost not found
2022-12-31 01:04:35,058:INFO:mlflow==1.30.0
2022-12-31 01:04:35,059:INFO:Checking Exceptions
2022-12-31 01:04:35,059:INFO:Declaring global variables
2022-12-31 01:04:35,059:INFO:USI: 8cca
2022-12-31 01:04:35,059:INFO:pycaret_globals: {'_all_metrics', 'stratify_param', 'fold_shuffle_param', 'master_model_container', 'USI', 'fold_groups_param_full', 'experiment__', '_ml_usecase', 'seed', 'exp_name_log', '_gpu_n_jobs_param', 'data_before_preprocess', 'fix_imbalance_param', '_internal_pipeline', 'gpu_param', 'X_train', 'fold_param', 'y', 'fold_generator', 'imputation_regressor', 'display_container', 'log_plots_param', 'y_train', 'y_test', 'html_param', 'X', 'fold_groups_param', '_all_models', 'imputation_classifier', '_all_models_internal', 'target_param', 'transform_target_param', 'transform_target_method_param', 'logging_param', 'iterative_imputation_iters_param', 'prep_pipe', 'n_jobs_param', 'fix_imbalance_method_param', '_available_plots', 'X_test', 'create_model_container', 'pycaret_globals'}
2022-12-31 01:04:35,059:INFO:Preparing display monitor
2022-12-31 01:04:35,059:INFO:Preparing display monitor
2022-12-31 01:04:35,090:INFO:Importing libraries
2022-12-31 01:04:35,091:INFO:Copying data for preprocessing
2022-12-31 01:04:35,117:INFO:Declaring preprocessing parameters
2022-12-31 01:04:35,124:INFO:Creating preprocessing pipeline
2022-12-31 01:04:35,239:INFO:Preprocessing pipeline created successfully
2022-12-31 01:04:35,239:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-12-31 01:04:35,240:INFO:Creating global containers
2022-12-31 01:04:35,242:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-12-31 01:04:38,199:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-31 01:04:38,200:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-31 01:04:38,488:WARNING:Couldn't import xgboost.XGBRegressor
2022-12-31 01:04:38,491:WARNING:Couldn't import catboost.CatBoostRegressor
2022-12-31 01:04:38,492:INFO:Creating grid variables
2022-12-31 01:04:38,530:INFO:Logging experiment in MLFlow
2022-12-31 01:04:38,552:WARNING:Couldn't create mlflow experiment. Exception:
2022-12-31 01:04:38,564:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 1738, in setup
    mlflow.create_experiment(exp_name_log)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\fluent.py", line 1236, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\client.py", line 635, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location, tags)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 258, in create_experiment
    tags=[ExperimentTag(key, value) for (key, value) in tags.items()] if tags else [],
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 382, in create_experiment
    self._validate_experiment_does_not_exist(name)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\mlflow\store\tracking\file_store.py", line 376, in _validate_experiment_does_not_exist
    databricks_pb2.RESOURCE_ALREADY_EXISTS,
mlflow.exceptions.MlflowException: Experiment 'king_county_house_pred' already exists.

2022-12-31 01:04:39,196:INFO:SubProcess save_model() called ==================================
2022-12-31 01:04:39,229:INFO:Initializing save_model()
2022-12-31 01:04:39,229:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2022-12-31 01:04:39,229:INFO:Adding model into prep_pipe
2022-12-31 01:04:39,234:WARNING:Only Model saved as it was a pipeline.
2022-12-31 01:04:39,267:INFO:Transformation Pipeline.pkl saved in current working directory
2022-12-31 01:04:39,281:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-31 01:04:39,281:INFO:save_model() successfully completed......................................
2022-12-31 01:04:39,434:INFO:SubProcess save_model() end ==================================
2022-12-31 01:04:39,652:INFO:create_model_container: 0
2022-12-31 01:04:39,653:INFO:master_model_container: 0
2022-12-31 01:04:39,653:INFO:display_container: 1
2022-12-31 01:04:39,667:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-12-31 01:04:39,667:INFO:setup() succesfully completed......................................
2022-12-31 01:04:39,834:INFO:Initializing compare_models()
2022-12-31 01:04:39,835:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, exclude=['ransac'])
2022-12-31 01:04:39,835:INFO:Checking exceptions
2022-12-31 01:04:39,835:INFO:Preparing display monitor
2022-12-31 01:04:39,836:INFO:Preparing display monitor
2022-12-31 01:04:39,903:INFO:Initializing Linear Regression
2022-12-31 01:04:39,904:INFO:Total runtime is 1.6673405965169272e-05 minutes
2022-12-31 01:04:39,926:INFO:SubProcess create_model() called ==================================
2022-12-31 01:04:39,928:INFO:Initializing create_model()
2022-12-31 01:04:39,928:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:39,928:INFO:Checking exceptions
2022-12-31 01:04:39,928:INFO:Importing libraries
2022-12-31 01:04:39,928:INFO:Copying training dataset
2022-12-31 01:04:39,932:INFO:Defining folds
2022-12-31 01:04:39,933:INFO:Declaring metric variables
2022-12-31 01:04:39,960:INFO:Importing untrained model
2022-12-31 01:04:39,981:INFO:Linear Regression Imported succesfully
2022-12-31 01:04:40,020:INFO:Starting cross validation
2022-12-31 01:04:40,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:04:48,781:INFO:Calculating mean and std
2022-12-31 01:04:48,782:INFO:Creating metrics dataframe
2022-12-31 01:04:48,788:INFO:Uploading results into container
2022-12-31 01:04:48,788:INFO:Uploading model into container now
2022-12-31 01:04:48,788:INFO:create_model_container: 1
2022-12-31 01:04:48,790:INFO:master_model_container: 1
2022-12-31 01:04:48,790:INFO:display_container: 2
2022-12-31 01:04:48,791:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2022-12-31 01:04:48,791:INFO:create_model() succesfully completed......................................
2022-12-31 01:04:48,909:INFO:SubProcess create_model() end ==================================
2022-12-31 01:04:48,910:INFO:Creating metrics dataframe
2022-12-31 01:04:48,931:INFO:Initializing Lasso Regression
2022-12-31 01:04:48,931:INFO:Total runtime is 0.15046300490697226 minutes
2022-12-31 01:04:48,951:INFO:SubProcess create_model() called ==================================
2022-12-31 01:04:48,953:INFO:Initializing create_model()
2022-12-31 01:04:48,953:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:48,953:INFO:Checking exceptions
2022-12-31 01:04:48,954:INFO:Importing libraries
2022-12-31 01:04:48,954:INFO:Copying training dataset
2022-12-31 01:04:48,956:INFO:Defining folds
2022-12-31 01:04:48,956:INFO:Declaring metric variables
2022-12-31 01:04:48,986:INFO:Importing untrained model
2022-12-31 01:04:49,014:INFO:Lasso Regression Imported succesfully
2022-12-31 01:04:49,077:INFO:Starting cross validation
2022-12-31 01:04:49,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:04:49,495:INFO:Calculating mean and std
2022-12-31 01:04:49,496:INFO:Creating metrics dataframe
2022-12-31 01:04:49,506:INFO:Uploading results into container
2022-12-31 01:04:49,507:INFO:Uploading model into container now
2022-12-31 01:04:49,507:INFO:create_model_container: 2
2022-12-31 01:04:49,508:INFO:master_model_container: 2
2022-12-31 01:04:49,508:INFO:display_container: 2
2022-12-31 01:04:49,509:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-12-31 01:04:49,511:INFO:create_model() succesfully completed......................................
2022-12-31 01:04:49,613:INFO:SubProcess create_model() end ==================================
2022-12-31 01:04:49,613:INFO:Creating metrics dataframe
2022-12-31 01:04:49,635:INFO:Initializing Ridge Regression
2022-12-31 01:04:49,635:INFO:Total runtime is 0.16218719085057579 minutes
2022-12-31 01:04:49,662:INFO:SubProcess create_model() called ==================================
2022-12-31 01:04:49,663:INFO:Initializing create_model()
2022-12-31 01:04:49,663:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:49,663:INFO:Checking exceptions
2022-12-31 01:04:49,663:INFO:Importing libraries
2022-12-31 01:04:49,663:INFO:Copying training dataset
2022-12-31 01:04:49,666:INFO:Defining folds
2022-12-31 01:04:49,666:INFO:Declaring metric variables
2022-12-31 01:04:49,694:INFO:Importing untrained model
2022-12-31 01:04:49,717:INFO:Ridge Regression Imported succesfully
2022-12-31 01:04:49,764:INFO:Starting cross validation
2022-12-31 01:04:49,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:04:50,203:INFO:Calculating mean and std
2022-12-31 01:04:50,204:INFO:Creating metrics dataframe
2022-12-31 01:04:50,211:INFO:Uploading results into container
2022-12-31 01:04:50,211:INFO:Uploading model into container now
2022-12-31 01:04:50,211:INFO:create_model_container: 3
2022-12-31 01:04:50,211:INFO:master_model_container: 3
2022-12-31 01:04:50,213:INFO:display_container: 2
2022-12-31 01:04:50,216:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2022-12-31 01:04:50,217:INFO:create_model() succesfully completed......................................
2022-12-31 01:04:50,321:INFO:SubProcess create_model() end ==================================
2022-12-31 01:04:50,322:INFO:Creating metrics dataframe
2022-12-31 01:04:50,356:INFO:Initializing Elastic Net
2022-12-31 01:04:50,356:INFO:Total runtime is 0.17421489953994754 minutes
2022-12-31 01:04:50,375:INFO:SubProcess create_model() called ==================================
2022-12-31 01:04:50,378:INFO:Initializing create_model()
2022-12-31 01:04:50,378:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:50,378:INFO:Checking exceptions
2022-12-31 01:04:50,379:INFO:Importing libraries
2022-12-31 01:04:50,379:INFO:Copying training dataset
2022-12-31 01:04:50,381:INFO:Defining folds
2022-12-31 01:04:50,381:INFO:Declaring metric variables
2022-12-31 01:04:50,411:INFO:Importing untrained model
2022-12-31 01:04:50,442:INFO:Elastic Net Imported succesfully
2022-12-31 01:04:50,492:INFO:Starting cross validation
2022-12-31 01:04:50,493:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:04:50,985:INFO:Calculating mean and std
2022-12-31 01:04:50,986:INFO:Creating metrics dataframe
2022-12-31 01:04:50,996:INFO:Uploading results into container
2022-12-31 01:04:50,997:INFO:Uploading model into container now
2022-12-31 01:04:50,997:INFO:create_model_container: 4
2022-12-31 01:04:50,997:INFO:master_model_container: 4
2022-12-31 01:04:50,997:INFO:display_container: 2
2022-12-31 01:04:51,000:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2022-12-31 01:04:51,000:INFO:create_model() succesfully completed......................................
2022-12-31 01:04:51,118:INFO:SubProcess create_model() end ==================================
2022-12-31 01:04:51,118:INFO:Creating metrics dataframe
2022-12-31 01:04:51,149:INFO:Initializing Least Angle Regression
2022-12-31 01:04:51,149:INFO:Total runtime is 0.1874346772829692 minutes
2022-12-31 01:04:51,169:INFO:SubProcess create_model() called ==================================
2022-12-31 01:04:51,170:INFO:Initializing create_model()
2022-12-31 01:04:51,170:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:51,170:INFO:Checking exceptions
2022-12-31 01:04:51,171:INFO:Importing libraries
2022-12-31 01:04:51,171:INFO:Copying training dataset
2022-12-31 01:04:51,174:INFO:Defining folds
2022-12-31 01:04:51,174:INFO:Declaring metric variables
2022-12-31 01:04:51,199:INFO:Importing untrained model
2022-12-31 01:04:51,229:INFO:Least Angle Regression Imported succesfully
2022-12-31 01:04:51,273:INFO:Starting cross validation
2022-12-31 01:04:51,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:04:51,692:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-12-31 01:04:51,698:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 428, in _process_worker
    r = call_item()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 275, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 620, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 2202, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 3177, in create_model_supervised
    error_score=0,
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 435, in result
    return self.__get_result()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-12-31 01:04:51,698:INFO:Initializing create_model()
2022-12-31 01:04:51,698:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:04:51,698:INFO:Checking exceptions
2022-12-31 01:04:51,698:INFO:Importing libraries
2022-12-31 01:04:51,698:INFO:Copying training dataset
2022-12-31 01:04:51,699:INFO:Defining folds
2022-12-31 01:04:51,699:INFO:Declaring metric variables
2022-12-31 01:04:51,719:INFO:Importing untrained model
2022-12-31 01:04:51,738:INFO:Least Angle Regression Imported succesfully
2022-12-31 01:04:51,782:INFO:Starting cross validation
2022-12-31 01:04:51,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:00,044:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-12-31 01:05:00,044:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 428, in _process_worker
    r = call_item()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\externals\loky\process_executor.py", line 275, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 620, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 2211, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 3177, in create_model_supervised
    error_score=0,
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 435, in result
    return self.__get_result()
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\concurrent\futures\_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-12-31 01:05:00,044:INFO:Initializing Lasso Least Angle Regression
2022-12-31 01:05:00,044:INFO:Total runtime is 0.33567533493041996 minutes
2022-12-31 01:05:00,072:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:00,074:INFO:Initializing create_model()
2022-12-31 01:05:00,074:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:00,074:INFO:Checking exceptions
2022-12-31 01:05:00,075:INFO:Importing libraries
2022-12-31 01:05:00,075:INFO:Copying training dataset
2022-12-31 01:05:00,078:INFO:Defining folds
2022-12-31 01:05:00,078:INFO:Declaring metric variables
2022-12-31 01:05:00,099:INFO:Importing untrained model
2022-12-31 01:05:00,127:INFO:Lasso Least Angle Regression Imported succesfully
2022-12-31 01:05:00,174:INFO:Starting cross validation
2022-12-31 01:05:00,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:08,116:INFO:Calculating mean and std
2022-12-31 01:05:08,119:INFO:Creating metrics dataframe
2022-12-31 01:05:08,128:INFO:Uploading results into container
2022-12-31 01:05:08,129:INFO:Uploading model into container now
2022-12-31 01:05:08,130:INFO:create_model_container: 5
2022-12-31 01:05:08,130:INFO:master_model_container: 5
2022-12-31 01:05:08,130:INFO:display_container: 2
2022-12-31 01:05:08,133:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2022-12-31 01:05:08,134:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:08,263:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:08,263:INFO:Creating metrics dataframe
2022-12-31 01:05:08,289:INFO:Initializing Orthogonal Matching Pursuit
2022-12-31 01:05:08,289:INFO:Total runtime is 0.4730963110923767 minutes
2022-12-31 01:05:08,309:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:08,310:INFO:Initializing create_model()
2022-12-31 01:05:08,310:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:08,310:INFO:Checking exceptions
2022-12-31 01:05:08,311:INFO:Importing libraries
2022-12-31 01:05:08,311:INFO:Copying training dataset
2022-12-31 01:05:08,312:INFO:Defining folds
2022-12-31 01:05:08,312:INFO:Declaring metric variables
2022-12-31 01:05:08,338:INFO:Importing untrained model
2022-12-31 01:05:08,357:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-12-31 01:05:08,402:INFO:Starting cross validation
2022-12-31 01:05:08,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:08,863:INFO:Calculating mean and std
2022-12-31 01:05:08,865:INFO:Creating metrics dataframe
2022-12-31 01:05:08,873:INFO:Uploading results into container
2022-12-31 01:05:08,873:INFO:Uploading model into container now
2022-12-31 01:05:08,873:INFO:create_model_container: 6
2022-12-31 01:05:08,873:INFO:master_model_container: 6
2022-12-31 01:05:08,873:INFO:display_container: 2
2022-12-31 01:05:08,880:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2022-12-31 01:05:08,881:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:08,999:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:08,999:INFO:Creating metrics dataframe
2022-12-31 01:05:09,024:INFO:Initializing Bayesian Ridge
2022-12-31 01:05:09,024:INFO:Total runtime is 0.48533815940221153 minutes
2022-12-31 01:05:09,044:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:09,045:INFO:Initializing create_model()
2022-12-31 01:05:09,045:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:09,046:INFO:Checking exceptions
2022-12-31 01:05:09,046:INFO:Importing libraries
2022-12-31 01:05:09,046:INFO:Copying training dataset
2022-12-31 01:05:09,048:INFO:Defining folds
2022-12-31 01:05:09,048:INFO:Declaring metric variables
2022-12-31 01:05:09,072:INFO:Importing untrained model
2022-12-31 01:05:09,093:INFO:Bayesian Ridge Imported succesfully
2022-12-31 01:05:09,135:INFO:Starting cross validation
2022-12-31 01:05:09,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:10,050:INFO:Calculating mean and std
2022-12-31 01:05:10,050:INFO:Creating metrics dataframe
2022-12-31 01:05:10,074:INFO:Uploading results into container
2022-12-31 01:05:10,075:INFO:Uploading model into container now
2022-12-31 01:05:10,075:INFO:create_model_container: 7
2022-12-31 01:05:10,076:INFO:master_model_container: 7
2022-12-31 01:05:10,076:INFO:display_container: 2
2022-12-31 01:05:10,083:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2022-12-31 01:05:10,083:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:10,251:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:10,251:INFO:Creating metrics dataframe
2022-12-31 01:05:10,282:INFO:Initializing Passive Aggressive Regressor
2022-12-31 01:05:10,282:INFO:Total runtime is 0.5063144246737162 minutes
2022-12-31 01:05:10,317:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:10,318:INFO:Initializing create_model()
2022-12-31 01:05:10,318:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:10,318:INFO:Checking exceptions
2022-12-31 01:05:10,318:INFO:Importing libraries
2022-12-31 01:05:10,318:INFO:Copying training dataset
2022-12-31 01:05:10,321:INFO:Defining folds
2022-12-31 01:05:10,322:INFO:Declaring metric variables
2022-12-31 01:05:10,344:INFO:Importing untrained model
2022-12-31 01:05:10,364:INFO:Passive Aggressive Regressor Imported succesfully
2022-12-31 01:05:10,397:INFO:Starting cross validation
2022-12-31 01:05:10,402:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:11,143:INFO:Calculating mean and std
2022-12-31 01:05:11,143:INFO:Creating metrics dataframe
2022-12-31 01:05:11,143:INFO:Uploading results into container
2022-12-31 01:05:11,143:INFO:Uploading model into container now
2022-12-31 01:05:11,143:INFO:create_model_container: 8
2022-12-31 01:05:11,143:INFO:master_model_container: 8
2022-12-31 01:05:11,143:INFO:display_container: 2
2022-12-31 01:05:11,161:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-12-31 01:05:11,162:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:11,309:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:11,309:INFO:Creating metrics dataframe
2022-12-31 01:05:11,359:INFO:Initializing Huber Regressor
2022-12-31 01:05:11,359:INFO:Total runtime is 0.5242598215738933 minutes
2022-12-31 01:05:11,392:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:11,392:INFO:Initializing create_model()
2022-12-31 01:05:11,392:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:11,392:INFO:Checking exceptions
2022-12-31 01:05:11,392:INFO:Importing libraries
2022-12-31 01:05:11,392:INFO:Copying training dataset
2022-12-31 01:05:11,397:INFO:Defining folds
2022-12-31 01:05:11,397:INFO:Declaring metric variables
2022-12-31 01:05:11,421:INFO:Importing untrained model
2022-12-31 01:05:11,439:INFO:Huber Regressor Imported succesfully
2022-12-31 01:05:11,484:INFO:Starting cross validation
2022-12-31 01:05:11,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:19,950:INFO:Calculating mean and std
2022-12-31 01:05:19,951:INFO:Creating metrics dataframe
2022-12-31 01:05:19,951:INFO:Uploading results into container
2022-12-31 01:05:19,964:INFO:Uploading model into container now
2022-12-31 01:05:19,964:INFO:create_model_container: 9
2022-12-31 01:05:19,964:INFO:master_model_container: 9
2022-12-31 01:05:19,964:INFO:display_container: 2
2022-12-31 01:05:19,965:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2022-12-31 01:05:19,967:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:20,121:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:20,121:INFO:Creating metrics dataframe
2022-12-31 01:05:20,170:INFO:Initializing K Neighbors Regressor
2022-12-31 01:05:20,170:INFO:Total runtime is 0.6711088260014852 minutes
2022-12-31 01:05:20,195:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:20,196:INFO:Initializing create_model()
2022-12-31 01:05:20,196:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:20,196:INFO:Checking exceptions
2022-12-31 01:05:20,196:INFO:Importing libraries
2022-12-31 01:05:20,196:INFO:Copying training dataset
2022-12-31 01:05:20,200:INFO:Defining folds
2022-12-31 01:05:20,200:INFO:Declaring metric variables
2022-12-31 01:05:20,225:INFO:Importing untrained model
2022-12-31 01:05:20,246:INFO:K Neighbors Regressor Imported succesfully
2022-12-31 01:05:20,281:INFO:Starting cross validation
2022-12-31 01:05:20,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:33,003:INFO:Calculating mean and std
2022-12-31 01:05:33,007:INFO:Creating metrics dataframe
2022-12-31 01:05:33,036:INFO:Uploading results into container
2022-12-31 01:05:33,036:INFO:Uploading model into container now
2022-12-31 01:05:33,037:INFO:create_model_container: 10
2022-12-31 01:05:33,037:INFO:master_model_container: 10
2022-12-31 01:05:33,037:INFO:display_container: 2
2022-12-31 01:05:33,044:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2022-12-31 01:05:33,044:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:33,214:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:33,214:INFO:Creating metrics dataframe
2022-12-31 01:05:33,280:INFO:Initializing Decision Tree Regressor
2022-12-31 01:05:33,280:INFO:Total runtime is 0.8896063844362896 minutes
2022-12-31 01:05:33,301:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:33,301:INFO:Initializing create_model()
2022-12-31 01:05:33,302:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:33,302:INFO:Checking exceptions
2022-12-31 01:05:33,302:INFO:Importing libraries
2022-12-31 01:05:33,302:INFO:Copying training dataset
2022-12-31 01:05:33,304:INFO:Defining folds
2022-12-31 01:05:33,304:INFO:Declaring metric variables
2022-12-31 01:05:33,331:INFO:Importing untrained model
2022-12-31 01:05:33,350:INFO:Decision Tree Regressor Imported succesfully
2022-12-31 01:05:33,392:INFO:Starting cross validation
2022-12-31 01:05:33,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:05:35,918:INFO:Calculating mean and std
2022-12-31 01:05:35,920:INFO:Creating metrics dataframe
2022-12-31 01:05:35,935:INFO:Uploading results into container
2022-12-31 01:05:35,936:INFO:Uploading model into container now
2022-12-31 01:05:35,936:INFO:create_model_container: 11
2022-12-31 01:05:35,937:INFO:master_model_container: 11
2022-12-31 01:05:35,937:INFO:display_container: 2
2022-12-31 01:05:35,941:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2022-12-31 01:05:35,941:INFO:create_model() succesfully completed......................................
2022-12-31 01:05:36,130:INFO:SubProcess create_model() end ==================================
2022-12-31 01:05:36,130:INFO:Creating metrics dataframe
2022-12-31 01:05:36,189:INFO:Initializing Random Forest Regressor
2022-12-31 01:05:36,190:INFO:Total runtime is 0.9381067514419557 minutes
2022-12-31 01:05:36,213:INFO:SubProcess create_model() called ==================================
2022-12-31 01:05:36,214:INFO:Initializing create_model()
2022-12-31 01:05:36,214:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:05:36,214:INFO:Checking exceptions
2022-12-31 01:05:36,214:INFO:Importing libraries
2022-12-31 01:05:36,214:INFO:Copying training dataset
2022-12-31 01:05:36,217:INFO:Defining folds
2022-12-31 01:05:36,218:INFO:Declaring metric variables
2022-12-31 01:05:36,240:INFO:Importing untrained model
2022-12-31 01:05:36,265:INFO:Random Forest Regressor Imported succesfully
2022-12-31 01:05:36,320:INFO:Starting cross validation
2022-12-31 01:05:36,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:07:23,027:INFO:Calculating mean and std
2022-12-31 01:07:23,029:INFO:Creating metrics dataframe
2022-12-31 01:07:23,044:INFO:Uploading results into container
2022-12-31 01:07:23,045:INFO:Uploading model into container now
2022-12-31 01:07:23,045:INFO:create_model_container: 12
2022-12-31 01:07:23,045:INFO:master_model_container: 12
2022-12-31 01:07:23,045:INFO:display_container: 2
2022-12-31 01:07:23,050:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2022-12-31 01:07:23,050:INFO:create_model() succesfully completed......................................
2022-12-31 01:07:23,265:INFO:SubProcess create_model() end ==================================
2022-12-31 01:07:23,266:INFO:Creating metrics dataframe
2022-12-31 01:07:23,341:INFO:Initializing Extra Trees Regressor
2022-12-31 01:07:23,341:INFO:Total runtime is 2.7239654660224915 minutes
2022-12-31 01:07:23,365:INFO:SubProcess create_model() called ==================================
2022-12-31 01:07:23,367:INFO:Initializing create_model()
2022-12-31 01:07:23,367:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:07:23,368:INFO:Checking exceptions
2022-12-31 01:07:23,368:INFO:Importing libraries
2022-12-31 01:07:23,368:INFO:Copying training dataset
2022-12-31 01:07:23,372:INFO:Defining folds
2022-12-31 01:07:23,372:INFO:Declaring metric variables
2022-12-31 01:07:23,402:INFO:Importing untrained model
2022-12-31 01:07:23,430:INFO:Extra Trees Regressor Imported succesfully
2022-12-31 01:07:23,480:INFO:Starting cross validation
2022-12-31 01:07:23,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:08:59,823:INFO:Calculating mean and std
2022-12-31 01:08:59,827:INFO:Creating metrics dataframe
2022-12-31 01:08:59,840:INFO:Uploading results into container
2022-12-31 01:08:59,840:INFO:Uploading model into container now
2022-12-31 01:08:59,840:INFO:create_model_container: 13
2022-12-31 01:08:59,840:INFO:master_model_container: 13
2022-12-31 01:08:59,840:INFO:display_container: 2
2022-12-31 01:08:59,846:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2022-12-31 01:08:59,847:INFO:create_model() succesfully completed......................................
2022-12-31 01:09:00,025:INFO:SubProcess create_model() end ==================================
2022-12-31 01:09:00,026:INFO:Creating metrics dataframe
2022-12-31 01:09:00,092:INFO:Initializing AdaBoost Regressor
2022-12-31 01:09:00,092:INFO:Total runtime is 4.336474267641703 minutes
2022-12-31 01:09:00,119:INFO:SubProcess create_model() called ==================================
2022-12-31 01:09:00,120:INFO:Initializing create_model()
2022-12-31 01:09:00,120:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:09:00,120:INFO:Checking exceptions
2022-12-31 01:09:00,120:INFO:Importing libraries
2022-12-31 01:09:00,123:INFO:Copying training dataset
2022-12-31 01:09:00,126:INFO:Defining folds
2022-12-31 01:09:00,126:INFO:Declaring metric variables
2022-12-31 01:09:00,152:INFO:Importing untrained model
2022-12-31 01:09:00,185:INFO:AdaBoost Regressor Imported succesfully
2022-12-31 01:09:00,237:INFO:Starting cross validation
2022-12-31 01:09:00,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:09:20,328:INFO:Calculating mean and std
2022-12-31 01:09:20,329:INFO:Creating metrics dataframe
2022-12-31 01:09:20,342:INFO:Uploading results into container
2022-12-31 01:09:20,342:INFO:Uploading model into container now
2022-12-31 01:09:20,343:INFO:create_model_container: 14
2022-12-31 01:09:20,343:INFO:master_model_container: 14
2022-12-31 01:09:20,343:INFO:display_container: 2
2022-12-31 01:09:20,346:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2022-12-31 01:09:20,346:INFO:create_model() succesfully completed......................................
2022-12-31 01:09:20,512:INFO:SubProcess create_model() end ==================================
2022-12-31 01:09:20,512:INFO:Creating metrics dataframe
2022-12-31 01:09:20,569:INFO:Initializing Gradient Boosting Regressor
2022-12-31 01:09:20,570:INFO:Total runtime is 4.677775200208028 minutes
2022-12-31 01:09:20,590:INFO:SubProcess create_model() called ==================================
2022-12-31 01:09:20,590:INFO:Initializing create_model()
2022-12-31 01:09:20,591:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:09:20,591:INFO:Checking exceptions
2022-12-31 01:09:20,591:INFO:Importing libraries
2022-12-31 01:09:20,591:INFO:Copying training dataset
2022-12-31 01:09:20,593:INFO:Defining folds
2022-12-31 01:09:20,594:INFO:Declaring metric variables
2022-12-31 01:09:20,612:INFO:Importing untrained model
2022-12-31 01:09:20,634:INFO:Gradient Boosting Regressor Imported succesfully
2022-12-31 01:09:20,673:INFO:Starting cross validation
2022-12-31 01:09:20,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:09:52,683:INFO:Calculating mean and std
2022-12-31 01:09:52,683:INFO:Creating metrics dataframe
2022-12-31 01:09:52,693:INFO:Uploading results into container
2022-12-31 01:09:52,693:INFO:Uploading model into container now
2022-12-31 01:09:52,693:INFO:create_model_container: 15
2022-12-31 01:09:52,694:INFO:master_model_container: 15
2022-12-31 01:09:52,694:INFO:display_container: 2
2022-12-31 01:09:52,700:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2022-12-31 01:09:52,700:INFO:create_model() succesfully completed......................................
2022-12-31 01:09:52,805:INFO:SubProcess create_model() end ==================================
2022-12-31 01:09:52,805:INFO:Creating metrics dataframe
2022-12-31 01:09:52,825:INFO:Initializing Light Gradient Boosting Machine
2022-12-31 01:09:52,825:INFO:Total runtime is 5.215367674827576 minutes
2022-12-31 01:09:52,846:INFO:SubProcess create_model() called ==================================
2022-12-31 01:09:52,846:INFO:Initializing create_model()
2022-12-31 01:09:52,846:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:09:52,847:INFO:Checking exceptions
2022-12-31 01:09:52,847:INFO:Importing libraries
2022-12-31 01:09:52,847:INFO:Copying training dataset
2022-12-31 01:09:52,849:INFO:Defining folds
2022-12-31 01:09:52,849:INFO:Declaring metric variables
2022-12-31 01:09:52,872:INFO:Importing untrained model
2022-12-31 01:09:52,898:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:09:52,933:INFO:Starting cross validation
2022-12-31 01:09:52,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:09:55,566:INFO:Calculating mean and std
2022-12-31 01:09:55,568:INFO:Creating metrics dataframe
2022-12-31 01:09:55,584:INFO:Uploading results into container
2022-12-31 01:09:55,585:INFO:Uploading model into container now
2022-12-31 01:09:55,587:INFO:create_model_container: 16
2022-12-31 01:09:55,587:INFO:master_model_container: 16
2022-12-31 01:09:55,588:INFO:display_container: 2
2022-12-31 01:09:55,592:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:09:55,593:INFO:create_model() succesfully completed......................................
2022-12-31 01:09:55,719:INFO:SubProcess create_model() end ==================================
2022-12-31 01:09:55,720:INFO:Creating metrics dataframe
2022-12-31 01:09:55,765:INFO:Initializing Dummy Regressor
2022-12-31 01:09:55,766:INFO:Total runtime is 5.2643782575925195 minutes
2022-12-31 01:09:55,785:INFO:SubProcess create_model() called ==================================
2022-12-31 01:09:55,785:INFO:Initializing create_model()
2022-12-31 01:09:55,785:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB7195C8>, kwargs={})
2022-12-31 01:09:55,786:INFO:Checking exceptions
2022-12-31 01:09:55,786:INFO:Importing libraries
2022-12-31 01:09:55,786:INFO:Copying training dataset
2022-12-31 01:09:55,790:INFO:Defining folds
2022-12-31 01:09:55,790:INFO:Declaring metric variables
2022-12-31 01:09:55,820:INFO:Importing untrained model
2022-12-31 01:09:55,843:INFO:Dummy Regressor Imported succesfully
2022-12-31 01:09:55,891:INFO:Starting cross validation
2022-12-31 01:09:55,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:09:56,305:INFO:Calculating mean and std
2022-12-31 01:09:56,306:INFO:Creating metrics dataframe
2022-12-31 01:09:56,313:INFO:Uploading results into container
2022-12-31 01:09:56,313:INFO:Uploading model into container now
2022-12-31 01:09:56,313:INFO:create_model_container: 17
2022-12-31 01:09:56,313:INFO:master_model_container: 17
2022-12-31 01:09:56,314:INFO:display_container: 2
2022-12-31 01:09:56,314:INFO:PowerTransformedTargetRegressor(constant=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                quantile=None,
                                regressor=DummyRegressor(constant=None,
                                                         quantile=None,
                                                         strategy='mean'),
                                strategy='mean')
2022-12-31 01:09:56,314:INFO:create_model() succesfully completed......................................
2022-12-31 01:09:56,423:INFO:SubProcess create_model() end ==================================
2022-12-31 01:09:56,423:INFO:Creating metrics dataframe
2022-12-31 01:09:56,501:INFO:Initializing create_model()
2022-12-31 01:09:56,502:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-31 01:09:56,502:INFO:Checking exceptions
2022-12-31 01:09:56,502:INFO:Importing libraries
2022-12-31 01:09:56,502:INFO:Copying training dataset
2022-12-31 01:09:56,505:INFO:Defining folds
2022-12-31 01:09:56,505:INFO:Declaring metric variables
2022-12-31 01:09:56,505:INFO:Importing untrained model
2022-12-31 01:09:56,505:INFO:Declaring custom model
2022-12-31 01:09:56,511:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:09:56,512:INFO:Cross validation set to False
2022-12-31 01:09:56,512:INFO:Fitting Model
2022-12-31 01:09:56,983:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:09:56,983:INFO:create_models() succesfully completed......................................
2022-12-31 01:09:57,102:INFO:Creating MLFlow logs
2022-12-31 01:09:57,131:INFO:Model: Light Gradient Boosting Machine
2022-12-31 01:09:57,216:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-31 01:09:57,439:INFO:Initializing predict_model()
2022-12-31 01:09:57,439:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-31 01:09:57,439:INFO:Checking exceptions
2022-12-31 01:09:57,439:INFO:Preloading libraries
2022-12-31 01:09:58,072:INFO:Creating MLFlow logs
2022-12-31 01:09:58,107:INFO:Model: Extra Trees Regressor
2022-12-31 01:09:58,192:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:09:58,193:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:09:58,193:INFO:logged params: {}
2022-12-31 01:09:58,559:INFO:Creating MLFlow logs
2022-12-31 01:09:58,593:INFO:Model: Random Forest Regressor
2022-12-31 01:09:58,669:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:09:58,669:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:09:58,669:INFO:logged params: {}
2022-12-31 01:09:59,071:INFO:Creating MLFlow logs
2022-12-31 01:09:59,116:INFO:Model: Gradient Boosting Regressor
2022-12-31 01:09:59,204:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:09:59,204:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:09:59,204:INFO:logged params: {}
2022-12-31 01:09:59,576:INFO:Creating MLFlow logs
2022-12-31 01:09:59,607:INFO:Model: K Neighbors Regressor
2022-12-31 01:09:59,682:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:09:59,683:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:09:59,683:INFO:logged params: {}
2022-12-31 01:10:00,082:INFO:Creating MLFlow logs
2022-12-31 01:10:00,123:INFO:Model: Bayesian Ridge
2022-12-31 01:10:00,214:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:00,214:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:00,215:INFO:logged params: {}
2022-12-31 01:10:00,597:INFO:Creating MLFlow logs
2022-12-31 01:10:00,624:INFO:Model: Ridge Regression
2022-12-31 01:10:00,717:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:00,717:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:00,717:INFO:logged params: {}
2022-12-31 01:10:01,109:INFO:Creating MLFlow logs
2022-12-31 01:10:01,156:INFO:Model: Huber Regressor
2022-12-31 01:10:01,239:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:01,239:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:01,240:INFO:logged params: {}
2022-12-31 01:10:01,629:INFO:Creating MLFlow logs
2022-12-31 01:10:01,660:INFO:Model: Linear Regression
2022-12-31 01:10:01,752:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:01,752:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:01,752:INFO:logged params: {}
2022-12-31 01:10:02,173:INFO:Creating MLFlow logs
2022-12-31 01:10:02,199:INFO:Model: Decision Tree Regressor
2022-12-31 01:10:02,272:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:02,273:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:02,273:INFO:logged params: {}
2022-12-31 01:10:02,640:INFO:Creating MLFlow logs
2022-12-31 01:10:02,663:INFO:Model: PowerTransformedTargetRegressor
2022-12-31 01:10:02,756:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:02,756:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:02,756:INFO:logged params: {}
2022-12-31 01:10:03,188:INFO:Creating MLFlow logs
2022-12-31 01:10:03,219:INFO:Model: Orthogonal Matching Pursuit
2022-12-31 01:10:03,309:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:03,310:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:03,310:INFO:logged params: {}
2022-12-31 01:10:03,680:INFO:Creating MLFlow logs
2022-12-31 01:10:03,715:INFO:Model: Passive Aggressive Regressor
2022-12-31 01:10:03,809:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:03,809:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:03,809:INFO:logged params: {}
2022-12-31 01:10:04,213:INFO:Creating MLFlow logs
2022-12-31 01:10:04,248:INFO:Model: Elastic Net
2022-12-31 01:10:04,327:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:04,327:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:04,327:INFO:logged params: {}
2022-12-31 01:10:04,711:INFO:Creating MLFlow logs
2022-12-31 01:10:04,745:INFO:Model: Lasso Regression
2022-12-31 01:10:04,842:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:04,842:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:04,842:INFO:logged params: {}
2022-12-31 01:10:05,255:INFO:Creating MLFlow logs
2022-12-31 01:10:05,285:INFO:Model: Least Angle Regression
2022-12-31 01:10:05,367:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:05,367:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:05,367:INFO:logged params: {}
2022-12-31 01:10:05,741:INFO:Creating MLFlow logs
2022-12-31 01:10:05,778:INFO:Model: Dummy Regressor
2022-12-31 01:10:05,867:WARNING:Couldn't get params for model. Exception:
2022-12-31 01:10:05,867:WARNING:Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10407, in _mlflow_log_model
    params = params.get_all_params()
AttributeError: 'NoneType' object has no attribute 'get_all_params'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\HP 1O3O G2\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\tabular.py", line 10409, in _mlflow_log_model
    params = params.get_params()
AttributeError: 'NoneType' object has no attribute 'get_params'

2022-12-31 01:10:05,867:INFO:logged params: {}
2022-12-31 01:10:06,351:INFO:create_model_container: 17
2022-12-31 01:10:06,351:INFO:master_model_container: 17
2022-12-31 01:10:06,352:INFO:display_container: 2
2022-12-31 01:10:06,358:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:10:06,358:INFO:compare_models() succesfully completed......................................
2022-12-31 01:10:06,382:INFO:Initializing tune_model()
2022-12-31 01:10:06,382:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2022-12-31 01:10:06,382:INFO:Checking exceptions
2022-12-31 01:10:06,383:INFO:Preparing display monitor
2022-12-31 01:10:06,416:INFO:Copying training dataset
2022-12-31 01:10:06,420:INFO:Checking base model
2022-12-31 01:10:06,420:INFO:Base model : Light Gradient Boosting Machine
2022-12-31 01:10:06,433:INFO:Declaring metric variables
2022-12-31 01:10:06,456:INFO:Defining Hyperparameters
2022-12-31 01:10:06,591:INFO:Tuning with n_jobs=-1
2022-12-31 01:10:06,591:INFO:Initializing RandomizedSearchCV
2022-12-31 01:10:36,118:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 66, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 0.7}
2022-12-31 01:10:36,119:INFO:Hyperparameter search completed
2022-12-31 01:10:36,119:INFO:SubProcess create_model() called ==================================
2022-12-31 01:10:36,127:INFO:Initializing create_model()
2022-12-31 01:10:36,130:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB1A3908>, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0005, 'num_leaves': 90, 'n_estimators': 90, 'min_split_gain': 0.4, 'min_child_samples': 66, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7})
2022-12-31 01:10:36,131:INFO:Checking exceptions
2022-12-31 01:10:36,131:INFO:Importing libraries
2022-12-31 01:10:36,131:INFO:Copying training dataset
2022-12-31 01:10:36,140:INFO:Defining folds
2022-12-31 01:10:36,140:INFO:Declaring metric variables
2022-12-31 01:10:36,181:INFO:Importing untrained model
2022-12-31 01:10:36,182:INFO:Declaring custom model
2022-12-31 01:10:36,243:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:10:36,294:INFO:Starting cross validation
2022-12-31 01:10:36,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:10:38,924:INFO:Calculating mean and std
2022-12-31 01:10:38,924:INFO:Creating metrics dataframe
2022-12-31 01:10:38,975:INFO:Finalizing model
2022-12-31 01:10:39,640:INFO:Uploading results into container
2022-12-31 01:10:39,640:INFO:Uploading model into container now
2022-12-31 01:10:39,640:INFO:create_model_container: 18
2022-12-31 01:10:39,640:INFO:master_model_container: 18
2022-12-31 01:10:39,640:INFO:display_container: 3
2022-12-31 01:10:39,661:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:10:39,661:INFO:create_model() succesfully completed......................................
2022-12-31 01:10:39,835:INFO:SubProcess create_model() end ==================================
2022-12-31 01:10:39,835:INFO:Creating MLFlow logs
2022-12-31 01:10:39,862:INFO:Model: Light Gradient Boosting Machine
2022-12-31 01:10:39,953:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 66, 'min_child_weight': 0.001, 'min_split_gain': 0.4, 'n_estimators': 90, 'n_jobs': -1, 'num_leaves': 90, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.1, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7}
2022-12-31 01:10:40,188:INFO:Initializing predict_model()
2022-12-31 01:10:40,189:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-31 01:10:40,189:INFO:Checking exceptions
2022-12-31 01:10:40,189:INFO:Preloading libraries
2022-12-31 01:10:40,940:INFO:create_model_container: 18
2022-12-31 01:10:40,940:INFO:master_model_container: 18
2022-12-31 01:10:40,940:INFO:display_container: 3
2022-12-31 01:10:40,948:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:10:40,948:INFO:tune_model() succesfully completed......................................
2022-12-31 01:10:41,120:INFO:Initializing create_model()
2022-12-31 01:10:41,120:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, add_to_model_list=True, probability_threshold=None, display=None, kwargs={})
2022-12-31 01:10:41,120:INFO:Checking exceptions
2022-12-31 01:10:41,121:INFO:Preparing display monitor
2022-12-31 01:10:41,161:INFO:Importing libraries
2022-12-31 01:10:41,162:INFO:Copying training dataset
2022-12-31 01:10:41,165:INFO:Defining folds
2022-12-31 01:10:41,165:INFO:Declaring metric variables
2022-12-31 01:10:41,189:INFO:Importing untrained model
2022-12-31 01:10:41,222:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:10:41,293:INFO:Starting cross validation
2022-12-31 01:10:41,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:10:44,146:INFO:Calculating mean and std
2022-12-31 01:10:44,146:INFO:Creating metrics dataframe
2022-12-31 01:10:44,170:INFO:Finalizing model
2022-12-31 01:10:44,728:INFO:Creating MLFlow logs
2022-12-31 01:10:44,758:INFO:Model: Light Gradient Boosting Machine
2022-12-31 01:10:44,845:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-31 01:10:44,999:INFO:Initializing predict_model()
2022-12-31 01:10:44,999:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-31 01:10:44,999:INFO:Checking exceptions
2022-12-31 01:10:44,999:INFO:Preloading libraries
2022-12-31 01:10:45,491:INFO:Uploading results into container
2022-12-31 01:10:45,491:INFO:Uploading model into container now
2022-12-31 01:10:45,520:INFO:create_model_container: 19
2022-12-31 01:10:45,521:INFO:master_model_container: 19
2022-12-31 01:10:45,521:INFO:display_container: 4
2022-12-31 01:10:45,528:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:10:45,530:INFO:create_model() succesfully completed......................................
2022-12-31 01:10:45,668:INFO:Initializing tune_model()
2022-12-31 01:10:45,669:INFO:tune_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2022-12-31 01:10:45,669:INFO:Checking exceptions
2022-12-31 01:10:45,669:INFO:Preparing display monitor
2022-12-31 01:10:45,706:INFO:Copying training dataset
2022-12-31 01:10:45,707:INFO:Checking base model
2022-12-31 01:10:45,709:INFO:Base model : Light Gradient Boosting Machine
2022-12-31 01:10:45,731:INFO:Declaring metric variables
2022-12-31 01:10:45,754:INFO:Defining Hyperparameters
2022-12-31 01:10:45,891:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2022-12-31 01:10:45,891:INFO:Tuning with n_jobs=-1
2022-12-31 01:10:45,891:INFO:Initializing RandomizedSearchCV
2022-12-31 01:11:27,026:INFO:best_params: {'actual_estimator__num_leaves': 120, 'actual_estimator__max_depth': 60, 'actual_estimator__learning_rate': 0.1}
2022-12-31 01:11:27,026:INFO:Hyperparameter search completed
2022-12-31 01:11:27,026:INFO:SubProcess create_model() called ==================================
2022-12-31 01:11:27,037:INFO:Initializing create_model()
2022-12-31 01:11:27,037:INFO:create_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000024DBB042208>, kwargs={'num_leaves': 120, 'max_depth': 60, 'learning_rate': 0.1})
2022-12-31 01:11:27,038:INFO:Checking exceptions
2022-12-31 01:11:27,038:INFO:Importing libraries
2022-12-31 01:11:27,038:INFO:Copying training dataset
2022-12-31 01:11:27,045:INFO:Defining folds
2022-12-31 01:11:27,046:INFO:Declaring metric variables
2022-12-31 01:11:27,099:INFO:Importing untrained model
2022-12-31 01:11:27,099:INFO:Declaring custom model
2022-12-31 01:11:27,158:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:11:27,203:INFO:Starting cross validation
2022-12-31 01:11:27,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:11:32,612:INFO:Calculating mean and std
2022-12-31 01:11:32,613:INFO:Creating metrics dataframe
2022-12-31 01:11:32,644:INFO:Finalizing model
2022-12-31 01:11:33,862:INFO:Uploading results into container
2022-12-31 01:11:33,862:INFO:Uploading model into container now
2022-12-31 01:11:33,862:INFO:create_model_container: 20
2022-12-31 01:11:33,862:INFO:master_model_container: 20
2022-12-31 01:11:33,862:INFO:display_container: 5
2022-12-31 01:11:33,872:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:11:33,872:INFO:create_model() succesfully completed......................................
2022-12-31 01:11:34,030:INFO:SubProcess create_model() end ==================================
2022-12-31 01:11:34,030:INFO:Creating MLFlow logs
2022-12-31 01:11:34,067:INFO:Model: Light Gradient Boosting Machine
2022-12-31 01:11:34,161:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 60, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 120, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2022-12-31 01:11:34,375:INFO:Initializing predict_model()
2022-12-31 01:11:34,375:INFO:predict_model(estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-31 01:11:34,375:INFO:Checking exceptions
2022-12-31 01:11:34,375:INFO:Preloading libraries
2022-12-31 01:11:35,079:INFO:create_model_container: 20
2022-12-31 01:11:35,079:INFO:master_model_container: 20
2022-12-31 01:11:35,080:INFO:display_container: 5
2022-12-31 01:11:35,087:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=60,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=120, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=60,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=120,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:11:35,088:INFO:tune_model() succesfully completed......................................
2022-12-31 01:11:35,245:INFO:Initializing plot_model()
2022-12-31 01:11:35,245:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals_interactive, save=False, scale=1, system=True)
2022-12-31 01:11:35,246:INFO:Checking exceptions
2022-12-31 01:11:35,246:INFO:Preparing display monitor
2022-12-31 01:11:35,257:INFO:Preloading libraries
2022-12-31 01:11:35,292:INFO:Copying training dataset
2022-12-31 01:11:35,297:INFO:Copying test dataset
2022-12-31 01:11:35,298:INFO:Plot type: residuals_interactive
2022-12-31 01:11:35,501:INFO:Calculated model residuals
2022-12-31 01:12:45,120:INFO:Calculated Tunkey-Anscombe Plot
2022-12-31 01:12:49,067:INFO:Calculated Normal QQ Plot
2022-12-31 01:13:53,974:INFO:Calculated Scale-Location Plot
2022-12-31 01:14:25,324:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-12-31 01:14:25,597:INFO:Visual Rendered Successfully
2022-12-31 01:14:25,717:INFO:plot_model() succesfully completed......................................
2022-12-31 01:14:25,752:INFO:Initializing plot_model()
2022-12-31 01:14:25,752:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, save=False, scale=1, system=True)
2022-12-31 01:14:25,752:INFO:Checking exceptions
2022-12-31 01:14:25,752:INFO:Preparing display monitor
2022-12-31 01:14:25,762:INFO:Preloading libraries
2022-12-31 01:14:25,789:INFO:Copying training dataset
2022-12-31 01:14:25,796:INFO:Copying test dataset
2022-12-31 01:14:25,797:INFO:Plot type: feature
2022-12-31 01:14:25,797:WARNING:No coef_ found. Trying feature_importances_
2022-12-31 01:14:26,199:INFO:Visual Rendered Successfully
2022-12-31 01:14:26,325:INFO:plot_model() succesfully completed......................................
2022-12-31 01:14:26,344:INFO:Initializing plot_model()
2022-12-31 01:14:26,344:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=error, save=False, scale=1, system=True)
2022-12-31 01:14:26,345:INFO:Checking exceptions
2022-12-31 01:14:26,345:INFO:Preparing display monitor
2022-12-31 01:14:26,355:INFO:Preloading libraries
2022-12-31 01:14:26,380:INFO:Copying training dataset
2022-12-31 01:14:26,385:INFO:Copying test dataset
2022-12-31 01:14:26,387:INFO:Plot type: error
2022-12-31 01:14:26,570:INFO:Fitting Model
2022-12-31 01:14:26,572:INFO:Scoring test/hold-out set
2022-12-31 01:14:27,672:INFO:Visual Rendered Successfully
2022-12-31 01:14:27,795:INFO:plot_model() succesfully completed......................................
2022-12-31 01:14:27,814:INFO:Initializing evaluate_model()
2022-12-31 01:14:27,814:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-12-31 01:14:27,838:INFO:Initializing plot_model()
2022-12-31 01:14:27,838:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, save=False, scale=1, system=True)
2022-12-31 01:14:27,838:INFO:Checking exceptions
2022-12-31 01:14:27,838:INFO:Preparing display monitor
2022-12-31 01:14:27,849:INFO:Preloading libraries
2022-12-31 01:14:27,871:INFO:Copying training dataset
2022-12-31 01:14:27,871:INFO:Copying test dataset
2022-12-31 01:14:27,871:INFO:Plot type: parameter
2022-12-31 01:14:27,888:INFO:Visual Rendered Successfully
2022-12-31 01:14:28,022:INFO:plot_model() succesfully completed......................................
2022-12-31 01:14:28,054:INFO:Initializing predict_model()
2022-12-31 01:14:28,054:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2022-12-31 01:14:28,054:INFO:Checking exceptions
2022-12-31 01:14:28,054:INFO:Preloading libraries
2022-12-31 01:14:28,054:INFO:Preparing display monitor
2022-12-31 01:14:28,271:INFO:Initializing finalize_model()
2022-12-31 01:14:28,271:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=True, display=None)
2022-12-31 01:14:28,277:INFO:Finalizing PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:14:28,279:INFO:Initializing create_model()
2022-12-31 01:14:28,279:INFO:create_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, add_to_model_list=False, probability_threshold=None, display=None, kwargs={})
2022-12-31 01:14:28,279:INFO:Checking exceptions
2022-12-31 01:14:28,279:INFO:Importing libraries
2022-12-31 01:14:28,279:INFO:Copying training dataset
2022-12-31 01:14:28,279:INFO:Defining folds
2022-12-31 01:14:28,279:INFO:Declaring metric variables
2022-12-31 01:14:28,279:INFO:Importing untrained model
2022-12-31 01:14:28,279:INFO:Declaring custom model
2022-12-31 01:14:28,279:INFO:Light Gradient Boosting Machine Imported succesfully
2022-12-31 01:14:28,279:INFO:Starting cross validation
2022-12-31 01:14:28,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-12-31 01:14:31,371:INFO:Calculating mean and std
2022-12-31 01:14:31,372:INFO:Creating metrics dataframe
2022-12-31 01:14:31,379:INFO:Finalizing model
2022-12-31 01:14:32,004:INFO:create_model_container: 20
2022-12-31 01:14:32,004:INFO:master_model_container: 20
2022-12-31 01:14:32,004:INFO:display_container: 7
2022-12-31 01:14:32,012:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:14:32,012:INFO:create_model() succesfully completed......................................
2022-12-31 01:14:32,152:INFO:Creating MLFlow logs
2022-12-31 01:14:32,154:INFO:Model: Light Gradient Boosting Machine
2022-12-31 01:14:32,227:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 66, 'min_child_weight': 0.001, 'min_split_gain': 0.4, 'n_estimators': 90, 'n_jobs': -1, 'num_leaves': 90, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.1, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7}
2022-12-31 01:14:32,406:INFO:Initializing predict_model()
2022-12-31 01:14:32,406:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2022-12-31 01:14:32,406:INFO:Checking exceptions
2022-12-31 01:14:32,406:INFO:Preloading libraries
2022-12-31 01:14:32,887:INFO:create_model_container: 20
2022-12-31 01:14:32,887:INFO:master_model_container: 20
2022-12-31 01:14:32,887:INFO:display_container: 6
2022-12-31 01:14:32,887:INFO:PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2022-12-31 01:14:32,887:INFO:finalize_model() succesfully completed......................................
2022-12-31 01:14:33,028:INFO:Initializing save_model()
2022-12-31 01:14:33,036:INFO:save_model(model=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), model_name=house_price_pre-pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-12-31 01:14:33,036:INFO:Adding model into prep_pipe
2022-12-31 01:14:33,084:INFO:house_price_pre-pipeline.pkl saved in current working directory
2022-12-31 01:14:33,111:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy=...
                                                                         learning_rate=0.1,
                                                                         max_depth=-1,
                                                                         min_child_samples=66,
                                                                         min_child_weight=0.001,
                                                                         min_split_gain=0.4,
                                                                         n_estimators=90,
                                                                         n_jobs=-1,
                                                                         num_leaves=90,
                                                                         objective=None,
                                                                         random_state=123,
                                                                         reg_alpha=0.0005,
                                                                         reg_lambda=0.1,
                                                                         silent='warn',
                                                                         subsample=1.0,
                                                                         subsample_for_bin=200000,
                                                                         subsample_freq=0),
                                                 silent='warn', subsample=1.0,
                                                 subsample_for_bin=200000,
                                                 subsample_freq=0)]],
         verbose=False)
2022-12-31 01:14:33,111:INFO:save_model() successfully completed......................................
2022-12-31 01:14:33,295:INFO:Initializing predict_model()
2022-12-31 01:14:33,295:INFO:predict_model(estimator=PowerTransformedTargetRegressor(bagging_fraction=0.7, bagging_freq=6,
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=66,
                                min_child_weight=0.001, min_split_gain=0.4,
                                n_estimators=90, n_jobs=-1, num_leaves=90,
                                objective=None,
                                power_transformer_method='bo...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=66,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.4,
                                                        n_estimators=90,
                                                        n_jobs=-1,
                                                        num_leaves=90,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0005,
                                                        reg_lambda=0.1,
                                                        silent='warn',
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2022-12-31 01:14:33,295:INFO:Checking exceptions
2022-12-31 01:14:33,295:INFO:Preloading libraries
2022-12-31 01:14:33,295:INFO:Preparing display monitor
